{"version":"1.139.0","results":[{"check_id":"dockerfile.security.missing-user.missing-user","path":"GPT-SoVITS\\Dockerfile","start":{"line":53,"col":1,"offset":996},"end":{"line":62,"col":14,"offset":1645},"extra":{"metavars":{"$...VARS":{"start":{"line":53,"col":5,"offset":1000},"end":{"line":62,"col":14,"offset":1645},"abstract_content":"[\"/bin/bash\"\"-c\"\"\"]"}},"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nCMD [\"/bin/bash\", \"-c\", \"\\\r\n  rm -rf /workspace/GPT-SoVITS/GPT_SoVITS/pretrained_models && \\\r\n  rm -rf /workspace/GPT-SoVITS/GPT_SoVITS/text/G2PWModel && \\\r\n  rm -rf /workspace/GPT-SoVITS/tools/asr/models && \\\r\n  rm -rf /workspace/GPT-SoVITS/tools/uvr5/uvr5_weights && \\\r\n  ln -s /workspace/models/pretrained_models /workspace/GPT-SoVITS/GPT_SoVITS/pretrained_models && \\\r\n  ln -s /workspace/models/G2PWModel /workspace/GPT-SoVITS/GPT_SoVITS/text/G2PWModel && \\\r\n  ln -s /workspace/models/asr_models /workspace/GPT-SoVITS/tools/asr/models && \\\r\n  ln -s /workspace/models/uvr5_weights /workspace/GPT-SoVITS/tools/uvr5/uvr5_weights && \\\r\n  exec bash\"]","metadata":{"cwe":["CWE-250: Execution with Unnecessary Privileges"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user.missing-user","shortlink":"https://sg.run/Gbvn","semgrep.dev":{"rule":{"origin":"community","r_id":20148,"rule_id":"AbUN06","rv_id":1032972,"url":"https://semgrep.dev/playground/r/5PTA4lQ/dockerfile.security.missing-user.missing-user","version_id":"5PTA4lQ"}}},"severity":"ERROR","fingerprint":"22d7804d7783257bb9b3979ada37ad8b4226ddf717476d09dc4323113dc18f0b230bfefe2b6241ed653f0341f633774de137db2b8cd4815e6f4e3afade4e6256_0","lines":"CMD [\"/bin/bash\", \"-c\", \"\\\n  rm -rf /workspace/GPT-SoVITS/GPT_SoVITS/pretrained_models && \\\n  rm -rf /workspace/GPT-SoVITS/GPT_SoVITS/text/G2PWModel && \\\n  rm -rf /workspace/GPT-SoVITS/tools/asr/models && \\\n  rm -rf /workspace/GPT-SoVITS/tools/uvr5/uvr5_weights && \\\n  ln -s /workspace/models/pretrained_models /workspace/GPT-SoVITS/GPT_SoVITS/pretrained_models && \\\n  ln -s /workspace/models/G2PWModel /workspace/GPT-SoVITS/GPT_SoVITS/text/G2PWModel && \\\n  ln -s /workspace/models/asr_models /workspace/GPT-SoVITS/tools/asr/models && \\\n  ln -s /workspace/models/uvr5_weights /workspace/GPT-SoVITS/tools/uvr5/uvr5_weights && \\\n  exec bash\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","path":"GPT-SoVITS\\GPT_SoVITS\\AR\\data\\data_module.py","start":{"line":53,"col":16,"offset":2134},"end":{"line":61,"col":10,"offset":2423},"extra":{"metavars":{},"message":"If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency","metadata":{"category":"security","cwe":"CWE-676: Use of Potentially Dangerous Function","subcategory":["audit"],"confidence":"HIGH","likelihood":"LOW","impact":"LOW","technology":["pytorch"],"description":"`PyTorch` memory not automatically pinned","references":["https://pytorch.org/docs/stable/data.html#memory-pinning"],"license":"AGPL-3.0 license","vulnerability_class":["Dangerous Method or Function"],"source":"https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","shortlink":"https://sg.run/jz5N","semgrep.dev":{"rule":{"origin":"community","r_id":17165,"rule_id":"WAUN1Z","rv_id":833289,"url":"https://semgrep.dev/playground/r/gETy20E/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","version_id":"gETy20E"}}},"severity":"WARNING","fingerprint":"4499e7e3b45b8067ded46372cd00ee887ed072e859c26b688a4eaa9a13db67143198ddad0080a6148f3302ddb888705ceb35d74dc905d0493b8d2853ad4666cd_0","lines":"        return DataLoader(\n            self._train_dataset,\n            batch_size=batch_size,\n            sampler=sampler,\n            collate_fn=self._train_dataset.collate,\n            num_workers=self.num_workers,\n            persistent_workers=True,\n            prefetch_factor=16,\n        )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","path":"GPT-SoVITS\\GPT_SoVITS\\AR\\data\\data_module.py","start":{"line":64,"col":16,"offset":2473},"end":{"line":72,"col":10,"offset":2758},"extra":{"metavars":{},"message":"If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency","metadata":{"category":"security","cwe":"CWE-676: Use of Potentially Dangerous Function","subcategory":["audit"],"confidence":"HIGH","likelihood":"LOW","impact":"LOW","technology":["pytorch"],"description":"`PyTorch` memory not automatically pinned","references":["https://pytorch.org/docs/stable/data.html#memory-pinning"],"license":"AGPL-3.0 license","vulnerability_class":["Dangerous Method or Function"],"source":"https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","shortlink":"https://sg.run/jz5N","semgrep.dev":{"rule":{"origin":"community","r_id":17165,"rule_id":"WAUN1Z","rv_id":833289,"url":"https://semgrep.dev/playground/r/gETy20E/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","version_id":"gETy20E"}}},"severity":"WARNING","fingerprint":"4499e7e3b45b8067ded46372cd00ee887ed072e859c26b688a4eaa9a13db67143198ddad0080a6148f3302ddb888705ceb35d74dc905d0493b8d2853ad4666cd_1","lines":"        return DataLoader(\n            self._dev_dataset,\n            batch_size=1,\n            shuffle=False,\n            collate_fn=self._train_dataset.collate,\n            num_workers=max(self.num_workers, 12),\n            persistent_workers=True,\n            prefetch_factor=16,\n        )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","path":"GPT-SoVITS\\GPT_SoVITS\\AR\\data\\data_module.py","start":{"line":76,"col":16,"offset":2841},"end":{"line":81,"col":10,"offset":3003},"extra":{"metavars":{},"message":"If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency","metadata":{"category":"security","cwe":"CWE-676: Use of Potentially Dangerous Function","subcategory":["audit"],"confidence":"HIGH","likelihood":"LOW","impact":"LOW","technology":["pytorch"],"description":"`PyTorch` memory not automatically pinned","references":["https://pytorch.org/docs/stable/data.html#memory-pinning"],"license":"AGPL-3.0 license","vulnerability_class":["Dangerous Method or Function"],"source":"https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","shortlink":"https://sg.run/jz5N","semgrep.dev":{"rule":{"origin":"community","r_id":17165,"rule_id":"WAUN1Z","rv_id":833289,"url":"https://semgrep.dev/playground/r/gETy20E/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","version_id":"gETy20E"}}},"severity":"WARNING","fingerprint":"4499e7e3b45b8067ded46372cd00ee887ed072e859c26b688a4eaa9a13db67143198ddad0080a6148f3302ddb888705ceb35d74dc905d0493b8d2853ad4666cd_2","lines":"        return DataLoader(\n            self._dev_dataset,\n            batch_size=1,\n            shuffle=False,\n            collate_fn=self._train_dataset.collate,\n        )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\AR\\data\\dataset.py","start":{"line":224,"col":28,"offset":8645},"end":{"line":224,"col":69,"offset":8686},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"00f2252a45d0e37500e58274a31a4faca977102c8fe318fd73aadf3bf092fa1f71a978f108e16471b688a7ab64bb61fc0186f2f0618e49b08281cd30352de8f0_0","lines":"            bert_feature = torch.load(path_bert, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","path":"GPT-SoVITS\\GPT_SoVITS\\AR\\data\\dataset.py","start":{"line":302,"col":18,"offset":11596},"end":{"line":307,"col":6,"offset":11725},"extra":{"metavars":{},"message":"If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency","metadata":{"category":"security","cwe":"CWE-676: Use of Potentially Dangerous Function","subcategory":["audit"],"confidence":"HIGH","likelihood":"LOW","impact":"LOW","technology":["pytorch"],"description":"`PyTorch` memory not automatically pinned","references":["https://pytorch.org/docs/stable/data.html#memory-pinning"],"license":"AGPL-3.0 license","vulnerability_class":["Dangerous Method or Function"],"source":"https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","shortlink":"https://sg.run/jz5N","semgrep.dev":{"rule":{"origin":"community","r_id":17165,"rule_id":"WAUN1Z","rv_id":833289,"url":"https://semgrep.dev/playground/r/gETy20E/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning","version_id":"gETy20E"}}},"severity":"WARNING","fingerprint":"ae7bb7c7c36cef502fe8c89a8f289a8e9178197563d64617064341efd8d49e2040753ac710d347395be0399adf756710663c052010c8629de57e63baef4668a1_0","lines":"    dataloader = DataLoader(\n        dataset,\n        batch_size=batch_size,\n        collate_fn=dataset.collate,\n        shuffle=False,\n    )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\bigvgan.py","start":{"line":376,"col":9,"offset":13832},"end":{"line":376,"col":65,"offset":13888},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"7ef122b204c616ce280743864a6e123a9fbb3ce0aa155020eade7dd38c4e8a771bcde9f3d6920e1565a063781810c89210b92f6169c2da8774dc5123186f2e00_0","lines":"        torch.save({\"generator\": self.state_dict()}, model_path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\bigvgan.py","start":{"line":450,"col":27,"offset":16890},"end":{"line":450,"col":76,"offset":16939},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"7ef122b204c616ce280743864a6e123a9fbb3ce0aa155020eade7dd38c4e8a771bcde9f3d6920e1565a063781810c89210b92f6169c2da8774dc5123186f2e00_1","lines":"        checkpoint_dict = torch.load(model_file, map_location=map_location)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\inference_e2e.py","start":{"line":25,"col":23,"offset":642},"end":{"line":25,"col":64,"offset":683},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"2df21056e7cb55fd724604777d8907f23982cefa609eb82e43d0efd22c3fb2832ed7fcbc724c795c175fd9b1e6c562cda0b3d95f926ca9eac8e2cdf056752273_0","lines":"    checkpoint_dict = torch.load(filepath, map_location=device)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\utils0.py","start":{"line":64,"col":23,"offset":1517},"end":{"line":64,"col":64,"offset":1558},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"f9db7e4f98af123c1001f02c96841d35353a66bb1d9c3efedd8c6b22c8b4adfc3d50285fc42a86f31829b5cd82d0970dbd4578dabd975e29ada2ae8adabd802e_0","lines":"    checkpoint_dict = torch.load(filepath, map_location=device)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\utils0.py","start":{"line":71,"col":5,"offset":1704},"end":{"line":71,"col":30,"offset":1729},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"f9db7e4f98af123c1001f02c96841d35353a66bb1d9c3efedd8c6b22c8b4adfc3d50285fc42a86f31829b5cd82d0970dbd4578dabd975e29ada2ae8adabd802e_1","lines":"    torch.save(obj, filepath)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TTS.py","start":{"line":590,"col":19,"offset":23491},"end":{"line":590,"col":97,"offset":23569},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"04ec5de4f32e959e1ec0af8266a15a2937a931e243ce5a92850a2aaeb805979e6615d2730e8cbcd5734eed7e0e71f8ebabdd97903baa0fb1389b16aff7f60cd5_0","lines":"        dict_s1 = torch.load(weights_path, map_location=self.configs.device, weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TTS.py","start":{"line":643,"col":28,"offset":25901},"end":{"line":647,"col":14,"offset":26096},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"04ec5de4f32e959e1ec0af8266a15a2937a931e243ce5a92850a2aaeb805979e6615d2730e8cbcd5734eed7e0e71f8ebabdd97903baa0fb1389b16aff7f60cd5_1","lines":"            state_dict_g = torch.load(\n                \"%s/GPT_SoVITS/pretrained_models/gsv-v4-pretrained/vocoder.pth\" % (now_dir,),\n                map_location=\"cpu\",\n                weights_only=False,\n            )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script.py","start":{"line":55,"col":16,"offset":1344},"end":{"line":55,"col":71,"offset":1399},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"193178270c5399289cd1fe2a371088c588593fd705591c79f1ffb8343c99f0f57305a69783daba8cfe85a032e5313b784c73e394fae8e3e9f5c811a607393676_0","lines":"        return torch.load(bio, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script.py","start":{"line":56,"col":12,"offset":1412},"end":{"line":56,"col":75,"offset":1475},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"193178270c5399289cd1fe2a371088c588593fd705591c79f1ffb8343c99f0f57305a69783daba8cfe85a032e5313b784c73e394fae8e3e9f5c811a607393676_1","lines":"    return torch.load(sovits_path, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script.py","start":{"line":695,"col":15,"offset":25917},"end":{"line":695,"col":55,"offset":25957},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"193178270c5399289cd1fe2a371088c588593fd705591c79f1ffb8343c99f0f57305a69783daba8cfe85a032e5313b784c73e394fae8e3e9f5c811a607393676_2","lines":"    dict_s1 = torch.load(gpt_path, weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script.py","start":{"line":793,"col":15,"offset":29432},"end":{"line":793,"col":55,"offset":29472},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"193178270c5399289cd1fe2a371088c588593fd705591c79f1ffb8343c99f0f57305a69783daba8cfe85a032e5313b784c73e394fae8e3e9f5c811a607393676_3","lines":"    dict_s1 = torch.load(gpt_path, weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script_v3v4.py","start":{"line":535,"col":20,"offset":18241},"end":{"line":537,"col":6,"offset":18365},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"3ac035d93f6451360ec942bf2714e32321e0dfe0fd3363b059ebb35bbc2fff65b830e4900f2032cf2090009e726a91de3658d0cddd51bdce2eb3805276a96009_0","lines":"    state_dict_g = torch.load(\n        \"%s/GPT_SoVITS/pretrained_models/gsv-v4-pretrained/vocoder.pth\" % (now_dir,), map_location=\"cpu\"\n    )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\inference_webui.py","start":{"line":87,"col":12,"offset":3067},"end":{"line":87,"col":26,"offset":3081},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"429c7cfccd8db126af0494cf1b8a03cce2d3cf94aa09638ae0dfbcefdbc0a09b8718c6e2470c1bf69312ed5c7a7de452eb5a4e4f106ac1cd2935ad87b9d6b717_0","lines":"is_share = eval(is_share)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\inference_webui.py","start":{"line":90,"col":11,"offset":3214},"end":{"line":90,"col":50,"offset":3253},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"429c7cfccd8db126af0494cf1b8a03cce2d3cf94aa09638ae0dfbcefdbc0a09b8718c6e2470c1bf69312ed5c7a7de452eb5a4e4f106ac1cd2935ad87b9d6b717_1","lines":"is_half = eval(os.environ.get(\"is_half\", \"True\")) and torch.cuda.is_available()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\inference_webui.py","start":{"line":381,"col":15,"offset":14812},"end":{"line":381,"col":75,"offset":14872},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"852eb30aa423fefbb4dbfb9b6fc343d5d3ea70e09fb7f9f9386b6ebbf7c5d7642efdead0ecd4e8a8fc3c21f6e5a525930fbb135ed20aff9e5d9838484487a968_0","lines":"    dict_s1 = torch.load(gpt_path, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\inference_webui.py","start":{"line":474,"col":20,"offset":17682},"end":{"line":478,"col":6,"offset":17845},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"852eb30aa423fefbb4dbfb9b6fc343d5d3ea70e09fb7f9f9386b6ebbf7c5d7642efdead0ecd4e8a8fc3c21f6e5a525930fbb135ed20aff9e5d9838484487a968_1","lines":"    state_dict_g = torch.load(\n        \"%s/GPT_SoVITS/pretrained_models/gsv-v4-pretrained/vocoder.pth\" % (now_dir,),\n        map_location=\"cpu\",\n        weights_only=False,\n    )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\inference_webui_fast.py","start":{"line":48,"col":12,"offset":1372},"end":{"line":48,"col":26,"offset":1386},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"d5b0b1f818db2ed869269ba501c453f819ffc3309e97ff825390c67a8b827bb538d2eb31ac1c941fd8aa490c35932bbefe679822c6e9da3f0f5441cca5638980_0","lines":"is_share = eval(is_share)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\inference_webui_fast.py","start":{"line":52,"col":11,"offset":1521},"end":{"line":52,"col":50,"offset":1560},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"d5b0b1f818db2ed869269ba501c453f819ffc3309e97ff825390c67a8b827bb538d2eb31ac1c941fd8aa490c35932bbefe679822c6e9da3f0f5441cca5638980_1","lines":"is_half = eval(os.environ.get(\"is_half\", \"True\")) and torch.cuda.is_available()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","start":{"line":115,"col":23,"offset":4555},"end":{"line":115,"col":91,"offset":4623},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b2c5627280bb1595b454be5f9e11a98de49d206028423a356511584297b5404e94bf162b2557a04c80a8f480d807811443838c7e89c037fc77ded526e42ffc9e_0","lines":"                ssl = torch.load(\"%s/%s.pt\" % (self.path4, audiopath), map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","start":{"line":121,"col":30,"offset":4906},"end":{"line":121,"col":98,"offset":4974},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b2c5627280bb1595b454be5f9e11a98de49d206028423a356511584297b5404e94bf162b2557a04c80a8f480d807811443838c7e89c037fc77ded526e42ffc9e_1","lines":"                    sv_emb = torch.load(\"%s/%s.pt\" % (self.path7, audiopath), map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","start":{"line":381,"col":23,"offset":14630},"end":{"line":381,"col":91,"offset":14698},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b2c5627280bb1595b454be5f9e11a98de49d206028423a356511584297b5404e94bf162b2557a04c80a8f480d807811443838c7e89c037fc77ded526e42ffc9e_2","lines":"                ssl = torch.load(\"%s/%s.pt\" % (self.path4, audiopath), map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","start":{"line":619,"col":23,"offset":24178},"end":{"line":619,"col":91,"offset":24246},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b2c5627280bb1595b454be5f9e11a98de49d206028423a356511584297b5404e94bf162b2557a04c80a8f480d807811443838c7e89c037fc77ded526e42ffc9e_3","lines":"                ssl = torch.load(\"%s/%s.pt\" % (self.path4, audiopath), map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","start":{"line":830,"col":23,"offset":32829},"end":{"line":830,"col":91,"offset":32897},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b2c5627280bb1595b454be5f9e11a98de49d206028423a356511584297b5404e94bf162b2557a04c80a8f480d807811443838c7e89c037fc77ded526e42ffc9e_4","lines":"                ssl = torch.load(\"%s/%s.pt\" % (self.path4, audiopath), map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","path":"GPT-SoVITS\\GPT_SoVITS\\module\\modules.py","start":{"line":610,"col":64,"offset":19586},"end":{"line":610,"col":86,"offset":19608},"extra":{"metavars":{"$MODULE":{"start":{"line":596,"col":7,"offset":19090},"end":{"line":596,"col":25,"offset":19108},"abstract_content":"MultiHeadAttention"},"$FN":{"start":{"line":610,"col":67,"offset":19589},"end":{"line":610,"col":72,"offset":19594},"abstract_content":"power"}},"message":"Usage of NumPy library inside PyTorch `MultiHeadAttention` module was found. Avoid mixing these libraries for efficiency and proper ONNX loading","metadata":{"category":"performance","subcategory":["audit"],"confidence":"MEDIUM","technology":["pytorch","numpy"],"description":"Uses of `NumPy` functions inside `PyTorch` modules","references":["https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects"],"license":"AGPL-3.0 license","source":"https://semgrep.dev/r/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","shortlink":"https://sg.run/9vxr","semgrep.dev":{"rule":{"origin":"community","r_id":17167,"rule_id":"KxU507","rv_id":833295,"url":"https://semgrep.dev/playground/r/5PTyDEK/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","version_id":"5PTyDEK"}}},"severity":"WARNING","fingerprint":"b59e2cf66a490c45715165f572c634dcd8caadd3f357261a48ce929f2d0af752f650dbb8422dcee21733204d6b69b0c2dead329c26c1e770e4a04a66b4098f8a_0","lines":"        self.attention = ScaledDotProductAttention(temperature=np.power(d_model, 0.5), dropout=dropout)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\onnx_export.py","start":{"line":89,"col":19,"offset":2839},"end":{"line":89,"col":59,"offset":2879},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"dcd653ce831fec1c960733de4b75d732ef98fe15dee7a4c646bf27bb95e71ee6338a8eb0f2d5caf19392db9e92b4547f4adf2f8b16c2122e578e575e57d8a880_0","lines":"        dict_s1 = torch.load(t2s_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\onnx_export.py","start":{"line":195,"col":19,"offset":7497},"end":{"line":195,"col":60,"offset":7538},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"dcd653ce831fec1c960733de4b75d732ef98fe15dee7a4c646bf27bb95e71ee6338a8eb0f2d5caf19392db9e92b4547f4adf2f8b16c2122e578e575e57d8a880_1","lines":"        dict_s2 = torch.load(vits_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\1-get-text.py","start":{"line":16,"col":11,"offset":484},"end":{"line":16,"col":50,"offset":523},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"3b36877a1fc7df4622c833cc335684a6f8d2dbce7207c7241c1d6459aacd7f48f9f12a2e3aa14112929ff22e80991531fee0350b34b1e424535ab4b716d70898_0","lines":"is_half = eval(os.environ.get(\"is_half\", \"True\")) and torch.cuda.is_available()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\1-get-text.py","start":{"line":42,"col":5,"offset":1450},"end":{"line":42,"col":30,"offset":1475},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"8e969afdc9e311fa9f7e2a25c1ab271ce0a3816bf5beafe3f29a5d7bb2e04e2f5a55e2996c86223fe06c0ee3a41d9d2f1e8930b6f54179cbc28648a6f5050387_0","lines":"    torch.save(fea, tmp_path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-hubert-wav32k.py","start":{"line":19,"col":11,"offset":544},"end":{"line":19,"col":50,"offset":583},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"783081f86da300dcfb22842a983f23a4af3a7b1ee134b630b23432fbc2fc0e0dfdfe35b5d5e482bfd57ffca483dbca5b25f69ade8fbde52c8a5395e517be1d13_0","lines":"is_half = eval(os.environ.get(\"is_half\", \"True\")) and torch.cuda.is_available()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-hubert-wav32k.py","start":{"line":50,"col":5,"offset":1491},"end":{"line":50,"col":30,"offset":1516},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"448937b52702962da29c6921b9d5c1a0950157b01ad64adf00777ab717fbf28ccf41e47b1c3a5bc0dd56c32bd6c976512599c39e5176cc64209cef2d5e9a69b4_0","lines":"    torch.save(fea, tmp_path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-sv.py","start":{"line":18,"col":11,"offset":474},"end":{"line":18,"col":50,"offset":513},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"3624df06f6b34e7c985023d679ebc58fe64f6bd67ecc9d9f6b417d79d502ad363251760d59cc8cffa368cc6289ee0492402df2c76cef61a0bfd22f2f2b27743f_0","lines":"is_half = eval(os.environ.get(\"is_half\", \"True\")) and torch.cuda.is_available()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-sv.py","start":{"line":38,"col":5,"offset":1086},"end":{"line":38,"col":30,"offset":1111},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"0fc19ba35b9dd04afadbce27d0ad86636bac67bdcac864c0a7f75357f81b98b51b7c97fa26d52b39d1fa04b42518dd0f7df71f95b3cb214311d2e718c9d53c7e_0","lines":"    torch.save(fea, tmp_path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-sv.py","start":{"line":60,"col":28,"offset":1615},"end":{"line":60,"col":67,"offset":1654},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"0fc19ba35b9dd04afadbce27d0ad86636bac67bdcac864c0a7f75357f81b98b51b7c97fa26d52b39d1fa04b42518dd0f7df71f95b3cb214311d2e718c9d53c7e_1","lines":"        pretrained_state = torch.load(sv_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\3-get-semantic.py","start":{"line":31,"col":11,"offset":856},"end":{"line":31,"col":50,"offset":895},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"3cafbc488aaabec2f17c3529af354395f012f94c1a0dca9cb7d87ad7e6b9ad9f6956c5e8065ac6c76fb58455762f5b6fdf2cfabddf92d458257748981e1d3332_0","lines":"is_half = eval(os.environ.get(\"is_half\", \"True\")) and torch.cuda.is_available()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\3-get-semantic.py","start":{"line":93,"col":23,"offset":2857},"end":{"line":93,"col":66,"offset":2900},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"70b90c9d7b735552d89620516ec829123ce3c4e676956fd47aed89f4f3d2fc7a7f1694e8b2fb3c7997009ec6df37460920476c32010ef5271ccc8b36a5d7e887_0","lines":"        ssl_content = torch.load(hubert_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\process_ckpt.py","start":{"line":16,"col":5,"offset":381},"end":{"line":16,"col":30,"offset":406},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b75dea23b45e22c4735c0921b0610bac85e395c06a747c56e73c6bd87b64ff5eb2ec89faac6e4597c243de6d86f40c09fdfbfac05d9202d99d50868cf0146f5d_0","lines":"    torch.save(fea, tmp_path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\process_ckpt.py","start":{"line":32,"col":5,"offset":667},"end":{"line":32,"col":25,"offset":687},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b75dea23b45e22c4735c0921b0610bac85e395c06a747c56e73c6bd87b64ff5eb2ec89faac6e4597c243de6d86f40c09fdfbfac05d9202d99d50868cf0146f5d_1","lines":"    torch.save(fea, bio)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\process_ckpt.py","start":{"line":137,"col":16,"offset":4060},"end":{"line":137,"col":71,"offset":4115},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b75dea23b45e22c4735c0921b0610bac85e395c06a747c56e73c6bd87b64ff5eb2ec89faac6e4597c243de6d86f40c09fdfbfac05d9202d99d50868cf0146f5d_2","lines":"        return torch.load(bio, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\process_ckpt.py","start":{"line":138,"col":12,"offset":4128},"end":{"line":138,"col":75,"offset":4191},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"b75dea23b45e22c4735c0921b0610bac85e395c06a747c56e73c6bd87b64ff5eb2ec89faac6e4597c243de6d86f40c09fdfbfac05d9202d99d50868cf0146f5d_3","lines":"    return torch.load(sovits_path, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\sv.py","start":{"line":13,"col":28,"offset":316},"end":{"line":13,"col":87,"offset":375},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"09e98d95d333e087411e173eef04447e65adb4ab1c4eaff7ecc749d68b0bb221048cd157dee59db8e979315009f810d690275222d4bdbd3ffe0c3abde01cedc6_0","lines":"        pretrained_state = torch.load(sv_path, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"GPT-SoVITS\\GPT_SoVITS\\text\\english.py","start":{"line":207,"col":9,"offset":4532},"end":{"line":207,"col":43,"offset":4566},"extra":{"metavars":{"$FUNC":{"start":{"line":207,"col":16,"offset":4539},"end":{"line":207,"col":20,"offset":4543},"abstract_content":"dump"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"531c3e819c249ba3ed3f97f81034f23fd773cff69d0b29c638750cff873767f61725735198a83a1382a0f52a590b5429f9d2c67296cbfcc7d91a2a47d541a83c_0","lines":"        pickle.dump(g2p_dict, pickle_file)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"GPT-SoVITS\\GPT_SoVITS\\text\\english.py","start":{"line":213,"col":24,"offset":4701},"end":{"line":213,"col":48,"offset":4725},"extra":{"metavars":{"$FUNC":{"start":{"line":213,"col":31,"offset":4708},"end":{"line":213,"col":35,"offset":4712},"abstract_content":"load"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"9499d020f6da2043828da3b539d9498d5599bb73dbff882a35467772bbd6a14778d23556fad5c62ecc629eaf176af63039b003bcbb6e5c4727dbff9ee7970736_0","lines":"            g2p_dict = pickle.load(pickle_file)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"GPT-SoVITS\\GPT_SoVITS\\text\\english.py","start":{"line":226,"col":25,"offset":5028},"end":{"line":226,"col":49,"offset":5052},"extra":{"metavars":{"$FUNC":{"start":{"line":226,"col":32,"offset":5035},"end":{"line":226,"col":36,"offset":5039},"abstract_content":"load"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"9499d020f6da2043828da3b539d9498d5599bb73dbff882a35467772bbd6a14778d23556fad5c62ecc629eaf176af63039b003bcbb6e5c4727dbff9ee7970736_1","lines":"            name_dict = pickle.load(pickle_file)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\g2pw.py","start":{"line":114,"col":9,"offset":3795},"end":{"line":114,"col":50,"offset":3836},"extra":{"metavars":{"$FUNC":{"start":{"line":114,"col":16,"offset":3802},"end":{"line":114,"col":20,"offset":3806},"abstract_content":"dump"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"6a4ffb420b452c476dfb5a358f9e04582d862957d4d033d50897acbbb32e6129eb1a781c35562ee3767450d0f6ff53fcc1761cc1bf469f2f1f40b754b59cbeac_0","lines":"        pickle.dump(polyphonic_dict, pickle_file)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\g2pw.py","start":{"line":120,"col":31,"offset":3978},"end":{"line":120,"col":55,"offset":4002},"extra":{"metavars":{"$FUNC":{"start":{"line":120,"col":38,"offset":3985},"end":{"line":120,"col":42,"offset":3989},"abstract_content":"load"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"b8c02ae04be205dfdf37d7aacb3c11c6e314e07ba0c4e5703059557730c1cf2bbdfd9b5163b7c0c8cba18a45db01488ce4629de33c062bd31e8c47b46343596d_0","lines":"            polyphonic_dict = pickle.load(pickle_file)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\g2pw.py","start":{"line":134,"col":21,"offset":4350},"end":{"line":134,"col":44,"offset":4373},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"efa51fea4c45a2195af84adb1ee453c760b88eff4c87232df4a1af37110050f54fd149f29f5937bb410a727e2dc3575f5612a4ef3eb56850d9f59b4fe7c4dde3_0","lines":"            value = eval(value_str.strip())","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\g2pw.py","start":{"line":141,"col":21,"offset":4631},"end":{"line":141,"col":44,"offset":4654},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"efa51fea4c45a2195af84adb1ee453c760b88eff4c87232df4a1af37110050f54fd149f29f5937bb410a727e2dc3575f5612a4ef3eb56850d9f59b4fe7c4dde3_1","lines":"            value = eval(value_str.strip())","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\utils.py","start":{"line":25,"col":23,"offset":593},"end":{"line":25,"col":90,"offset":660},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"02b21bc357b17c1e9df6a8c31fb42057291a88603d74ea770e4bc244283b1bbc55c2e212cf74d94b809d936c90721fb26c94281d1a03b9776041521dcd86bb53_0","lines":"    checkpoint_dict = torch.load(checkpoint_path, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\GPT_SoVITS\\utils.py","start":{"line":71,"col":5,"offset":2283},"end":{"line":71,"col":30,"offset":2308},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"02b21bc357b17c1e9df6a8c31fb42057291a88603d74ea770e4bc244283b1bbc55c2e212cf74d94b809d936c90721fb26c94281d1a03b9776041521dcd86bb53_1","lines":"    torch.save(fea, tmp_path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\api.py","start":{"line":270,"col":20,"offset":7743},"end":{"line":274,"col":6,"offset":7906},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"091040d428f8a485a98cd0a149611e6bcb9726388852526b41187d14291cbb02ce6ff438ef207d3e2611852d6cdda557df33f6c7385544093647fb9166b28d54_0","lines":"    state_dict_g = torch.load(\n        \"%s/GPT_SoVITS/pretrained_models/gsv-v4-pretrained/vocoder.pth\" % (now_dir,),\n        map_location=\"cpu\",\n        weights_only=False,\n    )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\api.py","start":{"line":478,"col":15,"offset":13834},"end":{"line":478,"col":75,"offset":13894},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"091040d428f8a485a98cd0a149611e6bcb9726388852526b41187d14291cbb02ce6ff438ef207d3e2611852d6cdda557df33f6c7385544093647fb9166b28d54_1","lines":"    dict_s1 = torch.load(gpt_path, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":4,"col":3,"offset":31},"end":{"line":4,"col":19,"offset":47},"extra":{"metavars":{"$SERVICE":{"start":{"line":4,"col":3,"offset":31},"end":{"line":4,"col":19,"offset":47},"abstract_content":"GPT-SoVITS-CU126"}},"message":"Service 'GPT-SoVITS-CU126' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q","semgrep.dev":{"rule":{"origin":"community","r_id":10054,"rule_id":"qNUoWr","rv_id":947034,"url":"https://semgrep.dev/playground/r/o5TZz4P/yaml.docker-compose.security.no-new-privileges.no-new-privileges","version_id":"o5TZz4P"}}},"severity":"WARNING","fingerprint":"5ba0c34b9689921c7581b43436fe45b87536fd938850740620d183d8372acb73eb06fd678c3b73091c5705ba75f1870da0b7c319911e14b98a463d7d8bcbbbec_0","lines":"  GPT-SoVITS-CU126:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":4,"col":3,"offset":31},"end":{"line":4,"col":19,"offset":47},"extra":{"metavars":{"$SERVICE":{"start":{"line":4,"col":3,"offset":31},"end":{"line":4,"col":19,"offset":47},"abstract_content":"GPT-SoVITS-CU126"}},"message":"Service 'GPT-SoVITS-CU126' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE","semgrep.dev":{"rule":{"origin":"community","r_id":10132,"rule_id":"v8U5vN","rv_id":947038,"url":"https://semgrep.dev/playground/r/X0TLZd0/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","version_id":"X0TLZd0"}}},"severity":"WARNING","fingerprint":"c4ae84853ef74d6c4086e4f6be4beb460885db65dec8934cf07c4fca10e4cef41812573e7e9e19ccf50d0b8271a51b06488826a118159864b9bc16c6be9698b3_0","lines":"  GPT-SoVITS-CU126:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":22,"col":3,"offset":448},"end":{"line":22,"col":24,"offset":469},"extra":{"metavars":{"$SERVICE":{"start":{"line":22,"col":3,"offset":448},"end":{"line":22,"col":24,"offset":469},"abstract_content":"GPT-SoVITS-CU126-Lite"}},"message":"Service 'GPT-SoVITS-CU126-Lite' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q","semgrep.dev":{"rule":{"origin":"community","r_id":10054,"rule_id":"qNUoWr","rv_id":947034,"url":"https://semgrep.dev/playground/r/o5TZz4P/yaml.docker-compose.security.no-new-privileges.no-new-privileges","version_id":"o5TZz4P"}}},"severity":"WARNING","fingerprint":"0070c7cd9a69049f6f946cad9a44a63f4e85a6195034559628eacb5337e291565d8232d2feb8e21ed14acc807912328922a777ffea43b1d2cbc09145b2a7363a_0","lines":"  GPT-SoVITS-CU126-Lite:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":22,"col":3,"offset":448},"end":{"line":22,"col":24,"offset":469},"extra":{"metavars":{"$SERVICE":{"start":{"line":22,"col":3,"offset":448},"end":{"line":22,"col":24,"offset":469},"abstract_content":"GPT-SoVITS-CU126-Lite"}},"message":"Service 'GPT-SoVITS-CU126-Lite' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE","semgrep.dev":{"rule":{"origin":"community","r_id":10132,"rule_id":"v8U5vN","rv_id":947038,"url":"https://semgrep.dev/playground/r/X0TLZd0/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","version_id":"X0TLZd0"}}},"severity":"WARNING","fingerprint":"e1908d575547585bd70419e10d8a9921f87f4aa99b56ee91b39ab0afd9820d80da4707822bdfde44bddc3d4fc70e46174e4cd77e0de91ca25cf2937014e580e9_0","lines":"  GPT-SoVITS-CU126-Lite:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":42,"col":3,"offset":999},"end":{"line":42,"col":19,"offset":1015},"extra":{"metavars":{"$SERVICE":{"start":{"line":42,"col":3,"offset":999},"end":{"line":42,"col":19,"offset":1015},"abstract_content":"GPT-SoVITS-CU128"}},"message":"Service 'GPT-SoVITS-CU128' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q","semgrep.dev":{"rule":{"origin":"community","r_id":10054,"rule_id":"qNUoWr","rv_id":947034,"url":"https://semgrep.dev/playground/r/o5TZz4P/yaml.docker-compose.security.no-new-privileges.no-new-privileges","version_id":"o5TZz4P"}}},"severity":"WARNING","fingerprint":"4249afd6e0632c8706ec801a920479d8866bf9f58864e0f49b60755f4dfb1012a082fab5b6e06fb6afd4ef771f90a07787c1104ec2efd6ea7314e287d4aaaba8_0","lines":"  GPT-SoVITS-CU128:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":42,"col":3,"offset":999},"end":{"line":42,"col":19,"offset":1015},"extra":{"metavars":{"$SERVICE":{"start":{"line":42,"col":3,"offset":999},"end":{"line":42,"col":19,"offset":1015},"abstract_content":"GPT-SoVITS-CU128"}},"message":"Service 'GPT-SoVITS-CU128' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE","semgrep.dev":{"rule":{"origin":"community","r_id":10132,"rule_id":"v8U5vN","rv_id":947038,"url":"https://semgrep.dev/playground/r/X0TLZd0/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","version_id":"X0TLZd0"}}},"severity":"WARNING","fingerprint":"c2d2e51ced459c21e8e2f72094b2bb78689d894579208690fab851749d4aa47ed8deba4dc7962927e45a641648ba45b7bbbccf20cc5ac1b3e4b2809a7ca96f6a_0","lines":"  GPT-SoVITS-CU128:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":60,"col":3,"offset":1416},"end":{"line":60,"col":24,"offset":1437},"extra":{"metavars":{"$SERVICE":{"start":{"line":60,"col":3,"offset":1416},"end":{"line":60,"col":24,"offset":1437},"abstract_content":"GPT-SoVITS-CU128-Lite"}},"message":"Service 'GPT-SoVITS-CU128-Lite' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q","semgrep.dev":{"rule":{"origin":"community","r_id":10054,"rule_id":"qNUoWr","rv_id":947034,"url":"https://semgrep.dev/playground/r/o5TZz4P/yaml.docker-compose.security.no-new-privileges.no-new-privileges","version_id":"o5TZz4P"}}},"severity":"WARNING","fingerprint":"be26cac7fa2b99a07df1e480d47ed389d60f576648e3eec5e3e20061526c3df4ef363c70d85a55176f83ab17c24b8080201560476db07750a26f62520caf1e13_0","lines":"  GPT-SoVITS-CU128-Lite:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"GPT-SoVITS\\docker-compose.yaml","start":{"line":60,"col":3,"offset":1416},"end":{"line":60,"col":24,"offset":1437},"extra":{"metavars":{"$SERVICE":{"start":{"line":60,"col":3,"offset":1416},"end":{"line":60,"col":24,"offset":1437},"abstract_content":"GPT-SoVITS-CU128-Lite"}},"message":"Service 'GPT-SoVITS-CU128-Lite' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE","semgrep.dev":{"rule":{"origin":"community","r_id":10132,"rule_id":"v8U5vN","rv_id":947038,"url":"https://semgrep.dev/playground/r/X0TLZd0/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","version_id":"X0TLZd0"}}},"severity":"WARNING","fingerprint":"ba0ed6ba0b1fc23e25dca84b9a3d931e1933bd4f5cadfcee719082d80dd5e1f15ebada4a99a40ed229f9779836fb4628ef591f632815d6271f507dfca4b91055_0","lines":"  GPT-SoVITS-CU128-Lite:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\tools\\audio_sr.py","start":{"line":29,"col":22,"offset":1128},"end":{"line":29,"col":89,"offset":1195},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"d13a994ba5bcf2b6f0f6768056802d90522f0928d8febd844357ab4a5eacfcf28805ac206f4c0a8cdfbcd5dbccaab3be4a49ccdfdd3146dc48e34a72360afced_0","lines":"        state_dict = torch.load(checkpoint_file, map_location=\"cpu\", weights_only=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\tools\\subfix_webui.py","start":{"line":423,"col":15,"offset":14858},"end":{"line":423,"col":34,"offset":14877},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"c88a3f12a786903d8006f6f2d081688ad20aa5660e04b54fb4b4bb62ede8aaa13347dbc9e16bb44c8f34f94d45999dd2f4add35fa5795aeecd6df380bc59143c_0","lines":"        share=eval(args.is_share),","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\tools\\uvr5\\bsroformer.py","start":{"line":295,"col":22,"offset":14070},"end":{"line":295,"col":64,"offset":14112},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"36a3076a31db0388c8f85d7f575f0af0ea0c6a183d020374dbfd5b625d00caa780125246107fb81298eec75a89a3ba4fa64f358c709eb565b2e4c931932722be_0","lines":"        state_dict = torch.load(model_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1","path":"GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\spec_utils.py","start":{"line":196,"col":32,"offset":6368},"end":{"line":196,"col":98,"offset":6434},"extra":{"metavars":{},"message":"Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.","fix":"hashlib.sha256(json.dumps(mp.param, sort_keys=True).encode(\"utf-8\"))","metadata":{"source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59","cwe":["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],"owasp":["A03:2017 - Sensitive Data Exposure","A02:2021 - Cryptographic Failures"],"bandit-code":"B303","asvs":{"control_id":"6.2.2 Insecure Custom Algorithm","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms","section":"V6 Stored Cryptography Verification Requirements","version":"4"},"references":["https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html","https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability","http://2012.sharcs.org/slides/stevens.pdf","https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"],"category":"security","technology":["python"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1","shortlink":"https://sg.run/ydYx","semgrep.dev":{"rule":{"origin":"community","r_id":9624,"rule_id":"x8UnBk","rv_id":946402,"url":"https://semgrep.dev/playground/r/d6TPjWl/python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1","version_id":"d6TPjWl"}}},"severity":"WARNING","fingerprint":"17c5e860706fbaa9d8d70e1149d93deb7c43e09c8d1c77c14f8626bb650311c19ef4be46ed5663316524aad885443ee7c1097e4fd5483f5aa9e07c53768ed939_0","lines":"    cache_dir = \"mph{}\".format(hashlib.sha1(json.dumps(mp.param, sort_keys=True).encode(\"utf-8\")).hexdigest())","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\tools\\uvr5\\vr.py","start":{"line":34,"col":15,"offset":1005},"end":{"line":34,"col":57,"offset":1047},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"bfdab25d27e0e0d8cb9b35dbaae611369fd60f534954d69a089b064384d4cccc48e31503c809b1887e40ac01c62e5e232428d84f393171e4abbe05ff0ecce73d_0","lines":"        cpk = torch.load(model_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"GPT-SoVITS\\tools\\uvr5\\vr.py","start":{"line":206,"col":15,"offset":8500},"end":{"line":206,"col":57,"offset":8542},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"bfdab25d27e0e0d8cb9b35dbaae611369fd60f534954d69a089b064384d4cccc48e31503c809b1887e40ac01c62e5e232428d84f393171e4abbe05ff0ecce73d_1","lines":"        cpk = torch.load(model_path, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\tools\\uvr5\\webui.py","start":{"line":28,"col":11,"offset":658},"end":{"line":28,"col":28,"offset":675},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"a84c02caf53c1474b2853fe574a7360de0367f8fc2439a258adb533b9dd626d547aab71b8449795bd6611b3234a11380d6c5dd18c90c14f6b173183633a308be_0","lines":"is_half = eval(sys.argv[2])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"GPT-SoVITS\\tools\\uvr5\\webui.py","start":{"line":30,"col":12,"offset":724},"end":{"line":30,"col":29,"offset":741},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"a84c02caf53c1474b2853fe574a7360de0367f8fc2439a258adb533b9dd626d547aab71b8449795bd6611b3234a11380d6c5dd18c90c14f6b173183633a308be_1","lines":"is_share = eval(sys.argv[4])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":239,"col":35,"offset":6802},"end":{"line":239,"col":39,"offset":6806},"extra":{"metavars":{"$FUNC":{"start":{"line":239,"col":20,"offset":6787},"end":{"line":239,"col":23,"offset":6790},"abstract_content":"run"},"$TRUE":{"start":{"line":239,"col":35,"offset":6802},"end":{"line":239,"col":39,"offset":6806},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"aa2b08b22d5277139243574da5a3facae4a7bd8506d6bb56f49c3500132a2c37b28670bca130c642d26f0bdb2f63c042fb4fd0d63651eb77bc9caabf437171b5_0","lines":"        subprocess.run(cmd, shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":288,"col":36,"offset":8526},"end":{"line":288,"col":40,"offset":8530},"extra":{"metavars":{"$FUNC":{"start":{"line":288,"col":19,"offset":8509},"end":{"line":288,"col":24,"offset":8514},"abstract_content":"Popen"},"$TRUE":{"start":{"line":288,"col":36,"offset":8526},"end":{"line":288,"col":40,"offset":8530},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_0","lines":"        p_label = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":318,"col":35,"offset":9386},"end":{"line":318,"col":39,"offset":9390},"extra":{"metavars":{"$FUNC":{"start":{"line":318,"col":18,"offset":9369},"end":{"line":318,"col":23,"offset":9374},"abstract_content":"Popen"},"$TRUE":{"start":{"line":318,"col":35,"offset":9386},"end":{"line":318,"col":39,"offset":9390},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_1","lines":"        p_uvr5 = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":356,"col":44,"offset":10961},"end":{"line":356,"col":48,"offset":10965},"extra":{"metavars":{"$FUNC":{"start":{"line":356,"col":27,"offset":10944},"end":{"line":356,"col":32,"offset":10949},"abstract_content":"Popen"},"$TRUE":{"start":{"line":356,"col":44,"offset":10961},"end":{"line":356,"col":48,"offset":10965},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_2","lines":"        p_tts_inference = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":396,"col":34,"offset":12471},"end":{"line":396,"col":38,"offset":12475},"extra":{"metavars":{"$FUNC":{"start":{"line":396,"col":17,"offset":12454},"end":{"line":396,"col":22,"offset":12459},"abstract_content":"Popen"},"$TRUE":{"start":{"line":396,"col":34,"offset":12471},"end":{"line":396,"col":38,"offset":12475},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_3","lines":"        p_asr = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":454,"col":38,"offset":14415},"end":{"line":454,"col":42,"offset":14419},"extra":{"metavars":{"$FUNC":{"start":{"line":454,"col":21,"offset":14398},"end":{"line":454,"col":26,"offset":14403},"abstract_content":"Popen"},"$TRUE":{"start":{"line":454,"col":38,"offset":14415},"end":{"line":454,"col":42,"offset":14419},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_4","lines":"        p_denoise = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":554,"col":43,"offset":18135},"end":{"line":554,"col":47,"offset":18139},"extra":{"metavars":{"$FUNC":{"start":{"line":554,"col":26,"offset":18118},"end":{"line":554,"col":31,"offset":18123},"abstract_content":"Popen"},"$TRUE":{"start":{"line":554,"col":43,"offset":18135},"end":{"line":554,"col":47,"offset":18139},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_5","lines":"        p_train_SoVITS = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":646,"col":40,"offset":21816},"end":{"line":646,"col":44,"offset":21820},"extra":{"metavars":{"$FUNC":{"start":{"line":646,"col":23,"offset":21799},"end":{"line":646,"col":28,"offset":21804},"abstract_content":"Popen"},"$TRUE":{"start":{"line":646,"col":40,"offset":21816},"end":{"line":646,"col":44,"offset":21820},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_6","lines":"        p_train_GPT = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":729,"col":34,"offset":24460},"end":{"line":729,"col":38,"offset":24464},"extra":{"metavars":{"$FUNC":{"start":{"line":729,"col":17,"offset":24443},"end":{"line":729,"col":22,"offset":24448},"abstract_content":"Popen"},"$TRUE":{"start":{"line":729,"col":34,"offset":24460},"end":{"line":729,"col":38,"offset":24464},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_7","lines":"            p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":811,"col":34,"offset":27372},"end":{"line":811,"col":38,"offset":27376},"extra":{"metavars":{"$FUNC":{"start":{"line":811,"col":17,"offset":27355},"end":{"line":811,"col":22,"offset":27360},"abstract_content":"Popen"},"$TRUE":{"start":{"line":811,"col":34,"offset":27372},"end":{"line":811,"col":38,"offset":27376},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_8","lines":"            p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":901,"col":34,"offset":30645},"end":{"line":901,"col":38,"offset":30649},"extra":{"metavars":{"$FUNC":{"start":{"line":901,"col":17,"offset":30628},"end":{"line":901,"col":22,"offset":30633},"abstract_content":"Popen"},"$TRUE":{"start":{"line":901,"col":34,"offset":30645},"end":{"line":901,"col":38,"offset":30649},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_9","lines":"            p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":923,"col":38,"offset":31496},"end":{"line":923,"col":42,"offset":31500},"extra":{"metavars":{"$FUNC":{"start":{"line":923,"col":21,"offset":31479},"end":{"line":923,"col":26,"offset":31484},"abstract_content":"Popen"},"$TRUE":{"start":{"line":923,"col":38,"offset":31496},"end":{"line":923,"col":42,"offset":31500},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_10","lines":"                p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":995,"col":34,"offset":33917},"end":{"line":995,"col":38,"offset":33921},"extra":{"metavars":{"$FUNC":{"start":{"line":995,"col":17,"offset":33900},"end":{"line":995,"col":22,"offset":33905},"abstract_content":"Popen"},"$TRUE":{"start":{"line":995,"col":34,"offset":33917},"end":{"line":995,"col":38,"offset":33921},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_11","lines":"            p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":1095,"col":42,"offset":37532},"end":{"line":1095,"col":46,"offset":37536},"extra":{"metavars":{"$FUNC":{"start":{"line":1095,"col":25,"offset":37515},"end":{"line":1095,"col":30,"offset":37520},"abstract_content":"Popen"},"$TRUE":{"start":{"line":1095,"col":42,"offset":37532},"end":{"line":1095,"col":46,"offset":37536},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_12","lines":"                    p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":1142,"col":38,"offset":39643},"end":{"line":1142,"col":42,"offset":39647},"extra":{"metavars":{"$FUNC":{"start":{"line":1142,"col":21,"offset":39626},"end":{"line":1142,"col":26,"offset":39631},"abstract_content":"Popen"},"$TRUE":{"start":{"line":1142,"col":38,"offset":39643},"end":{"line":1142,"col":42,"offset":39647},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_13","lines":"                p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":1164,"col":42,"offset":40586},"end":{"line":1164,"col":46,"offset":40590},"extra":{"metavars":{"$FUNC":{"start":{"line":1164,"col":25,"offset":40569},"end":{"line":1164,"col":30,"offset":40574},"abstract_content":"Popen"},"$TRUE":{"start":{"line":1164,"col":42,"offset":40586},"end":{"line":1164,"col":46,"offset":40590},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_14","lines":"                    p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":1204,"col":42,"offset":42408},"end":{"line":1204,"col":46,"offset":42412},"extra":{"metavars":{"$FUNC":{"start":{"line":1204,"col":25,"offset":42391},"end":{"line":1204,"col":30,"offset":42396},"abstract_content":"Popen"},"$TRUE":{"start":{"line":1204,"col":42,"offset":42408},"end":{"line":1204,"col":46,"offset":42412},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_15","lines":"                    p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"GPT-SoVITS\\webui.py","start":{"line":1298,"col":26,"offset":46372},"end":{"line":1298,"col":30,"offset":46376},"extra":{"metavars":{"$FUNC":{"start":{"line":1298,"col":9,"offset":46355},"end":{"line":1298,"col":14,"offset":46360},"abstract_content":"Popen"},"$TRUE":{"start":{"line":1298,"col":26,"offset":46372},"end":{"line":1298,"col":30,"offset":46376},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"b4aceb085fbd5569a5d4c482827365e0cad2c3239143692099651c57f869d601766967366f8d8a18def98cec70372fb2d2fcda7c0a0125e5c9bfef6f3d90e6f2_16","lines":"    p = Popen(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Timeout","rule_id":"python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token","message":"Timeout when running python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token on GPT-SoVITS\\GPT_SoVITS\\text\\tone_sandhi.py:\n ","path":"GPT-SoVITS\\GPT_SoVITS\\text\\tone_sandhi.py"},{"code":2,"level":"warn","type":"Timeout","rule_id":"python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token","message":"Timeout when running python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token on GPT-SoVITS\\webui.py:\n ","path":"GPT-SoVITS\\webui.py"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":221,"col":24,"offset":6515},"end":{"line":221,"col":27,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":222,"col":12,"offset":6515},"end":{"line":222,"col":15,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":225,"col":9,"offset":6515},"end":{"line":225,"col":12,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":226,"col":3,"offset":6515},"end":{"line":226,"col":6,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":227,"col":3,"offset":6515},"end":{"line":227,"col":6,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":230,"col":9,"offset":6515},"end":{"line":230,"col":12,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":231,"col":3,"offset":6515},"end":{"line":231,"col":6,"offset":6518}},{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":232,"col":3,"offset":6515},"end":{"line":232,"col":6,"offset":6518}}]],"message":"Syntax error at line GPT-SoVITS\\.github\\workflows\\docker-publish.yaml:221:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","spans":[{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":221,"col":24,"offset":6515},"end":{"line":221,"col":27,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":222,"col":12,"offset":6515},"end":{"line":222,"col":15,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":225,"col":9,"offset":6515},"end":{"line":225,"col":12,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":226,"col":3,"offset":6515},"end":{"line":226,"col":6,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":227,"col":3,"offset":6515},"end":{"line":227,"col":6,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":230,"col":9,"offset":6515},"end":{"line":230,"col":12,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":231,"col":3,"offset":6515},"end":{"line":231,"col":6,"offset":6518}},{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":232,"col":3,"offset":6515},"end":{"line":232,"col":6,"offset":6518}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":274,"col":3,"offset":8817},"end":{"line":274,"col":6,"offset":8820}}]],"message":"Syntax error at line GPT-SoVITS\\.github\\workflows\\docker-publish.yaml:274:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","spans":[{"file":"GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","start":{"line":274,"col":3,"offset":8817},"end":{"line":274,"col":6,"offset":8820}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"GPT-SoVITS\\Dockerfile","start":{"line":53,"col":26,"offset":0},"end":{"line":62,"col":12,"offset":622}}]],"message":"Syntax error at line GPT-SoVITS\\Dockerfile:53:\n `\\\r\n  rm -rf /workspace/GPT-SoVITS/GPT_SoVITS/pretrained_models && \\\r\n  rm -rf /workspace/GPT-SoVITS/GPT_SoVITS/text/G2PWModel && \\\r\n  rm -rf /workspace/GPT-SoVITS/tools/asr/models && \\\r\n  rm -rf /workspace/GPT-SoVITS/tools/uvr5/uvr5_weights && \\\r\n  ln -s /workspace/models/pretrained_models /workspace/GPT-SoVITS/GPT_SoVITS/pretrained_models && \\\r\n  ln -s /workspace/models/G2PWModel /workspace/GPT-SoVITS/GPT_SoVITS/text/G2PWModel && \\\r\n  ln -s /workspace/models/asr_models /workspace/GPT-SoVITS/tools/asr/models && \\\r\n  ln -s /workspace/models/uvr5_weights /workspace/GPT-SoVITS/tools/uvr5/uvr5_weights && \\\r\n  exec bash` was unexpected","path":"GPT-SoVITS\\Dockerfile","spans":[{"file":"GPT-SoVITS\\Dockerfile","start":{"line":53,"col":26,"offset":0},"end":{"line":62,"col":12,"offset":622}}]}],"paths":{"scanned":["GPT-SoVITS\\.dockerignore","GPT-SoVITS\\.github\\build_windows_packages.ps1","GPT-SoVITS\\.github\\workflows\\build_windows_packages.yaml","GPT-SoVITS\\.github\\workflows\\docker-publish.yaml","GPT-SoVITS\\.gitignore","GPT-SoVITS\\.pre-commit-config.yaml","GPT-SoVITS\\api.py","GPT-SoVITS\\api_v2.py","GPT-SoVITS\\Colab-Inference.ipynb","GPT-SoVITS\\Colab-WebUI.ipynb","GPT-SoVITS\\config.py","GPT-SoVITS\\Docker\\install_wrapper.sh","GPT-SoVITS\\Docker\\miniconda_install.sh","GPT-SoVITS\\docker-compose.yaml","GPT-SoVITS\\docker_build.sh","GPT-SoVITS\\Dockerfile","GPT-SoVITS\\docs\\cn\\Changelog_CN.md","GPT-SoVITS\\docs\\cn\\README.md","GPT-SoVITS\\docs\\en\\Changelog_EN.md","GPT-SoVITS\\docs\\ja\\Changelog_JA.md","GPT-SoVITS\\docs\\ja\\README.md","GPT-SoVITS\\docs\\ko\\Changelog_KO.md","GPT-SoVITS\\docs\\ko\\README.md","GPT-SoVITS\\docs\\tr\\Changelog_TR.md","GPT-SoVITS\\docs\\tr\\README.md","GPT-SoVITS\\extra-req.txt","GPT-SoVITS\\go-webui.bat","GPT-SoVITS\\go-webui.ps1","GPT-SoVITS\\gpt-sovits_kaggle.ipynb","GPT-SoVITS\\GPT_SoVITS\\AR\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\AR\\data\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\AR\\data\\bucket_sampler.py","GPT-SoVITS\\GPT_SoVITS\\AR\\data\\data_module.py","GPT-SoVITS\\GPT_SoVITS\\AR\\data\\dataset.py","GPT-SoVITS\\GPT_SoVITS\\AR\\models\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\AR\\models\\t2s_lightning_module.py","GPT-SoVITS\\GPT_SoVITS\\AR\\models\\t2s_lightning_module_onnx.py","GPT-SoVITS\\GPT_SoVITS\\AR\\models\\t2s_model.py","GPT-SoVITS\\GPT_SoVITS\\AR\\models\\t2s_model_onnx.py","GPT-SoVITS\\GPT_SoVITS\\AR\\models\\utils.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\activation.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\activation_onnx.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\embedding.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\embedding_onnx.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\lr_schedulers.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\optim.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\patched_mha_with_cache.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\patched_mha_with_cache_onnx.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\scaling.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\transformer.py","GPT-SoVITS\\GPT_SoVITS\\AR\\modules\\transformer_onnx.py","GPT-SoVITS\\GPT_SoVITS\\AR\\text_processing\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\AR\\text_processing\\phonemizer.py","GPT-SoVITS\\GPT_SoVITS\\AR\\text_processing\\symbols.py","GPT-SoVITS\\GPT_SoVITS\\AR\\utils\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\AR\\utils\\initialize.py","GPT-SoVITS\\GPT_SoVITS\\AR\\utils\\io.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\activations.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\activation1d.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\anti_alias_activation.cpp","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\anti_alias_activation_cuda.cu","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\compat.h","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\load.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\cuda\\type_shim.h","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\torch\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\torch\\act.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\torch\\filter.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\alias_free_activation\\torch\\resample.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\bigvgan.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_22khz_80band.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_24khz_100band.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_base_22khz_80band.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_base_24khz_100band.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_v2_22khz_80band_256x.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_v2_22khz_80band_fmax8k_256x.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_v2_24khz_100band_256x.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_v2_44khz_128band_256x.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\configs\\bigvgan_v2_44khz_128band_512x.json","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\discriminators.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\env.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_1","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_2","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_3","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_4","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_5","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_6","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_7","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\incl_licenses\\LICENSE_8","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\inference.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\inference_e2e.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\LICENSE","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\loss.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\meldataset.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\nv-modelcard++\\.gitkeep","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\nv-modelcard++\\bias.md","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\nv-modelcard++\\explainability.md","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\nv-modelcard++\\overview.md","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\nv-modelcard++\\privacy.md","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\nv-modelcard++\\safety.md","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\README.md","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\requirements.txt","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\train.py","GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\utils0.py","GPT-SoVITS\\GPT_SoVITS\\configs\\.gitignore","GPT-SoVITS\\GPT_SoVITS\\configs\\s1.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\s1big.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\s1big2.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\s1longer-v2.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\s1longer.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\s1mq.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\s2.json","GPT-SoVITS\\GPT_SoVITS\\configs\\s2v2Pro.json","GPT-SoVITS\\GPT_SoVITS\\configs\\s2v2ProPlus.json","GPT-SoVITS\\GPT_SoVITS\\configs\\train.yaml","GPT-SoVITS\\GPT_SoVITS\\configs\\tts_infer.yaml","GPT-SoVITS\\GPT_SoVITS\\download.py","GPT-SoVITS\\GPT_SoVITS\\eres2net\\ERes2Net.py","GPT-SoVITS\\GPT_SoVITS\\eres2net\\ERes2Net_huge.py","GPT-SoVITS\\GPT_SoVITS\\eres2net\\ERes2NetV2.py","GPT-SoVITS\\GPT_SoVITS\\eres2net\\fusion.py","GPT-SoVITS\\GPT_SoVITS\\eres2net\\kaldi.py","GPT-SoVITS\\GPT_SoVITS\\eres2net\\pooling_layers.py","GPT-SoVITS\\GPT_SoVITS\\export_torch_script.py","GPT-SoVITS\\GPT_SoVITS\\export_torch_script_v3v4.py","GPT-SoVITS\\GPT_SoVITS\\f5_tts\\model\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\f5_tts\\model\\backbones\\dit.py","GPT-SoVITS\\GPT_SoVITS\\f5_tts\\model\\backbones\\mmdit.py","GPT-SoVITS\\GPT_SoVITS\\f5_tts\\model\\backbones\\README.md","GPT-SoVITS\\GPT_SoVITS\\f5_tts\\model\\backbones\\unett.py","GPT-SoVITS\\GPT_SoVITS\\f5_tts\\model\\modules.py","GPT-SoVITS\\GPT_SoVITS\\feature_extractor\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\feature_extractor\\cnhubert.py","GPT-SoVITS\\GPT_SoVITS\\feature_extractor\\whisper_enc.py","GPT-SoVITS\\GPT_SoVITS\\inference_cli.py","GPT-SoVITS\\GPT_SoVITS\\inference_gui.py","GPT-SoVITS\\GPT_SoVITS\\inference_webui.py","GPT-SoVITS\\GPT_SoVITS\\inference_webui_fast.py","GPT-SoVITS\\GPT_SoVITS\\module\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\module\\attentions.py","GPT-SoVITS\\GPT_SoVITS\\module\\attentions_onnx.py","GPT-SoVITS\\GPT_SoVITS\\module\\commons.py","GPT-SoVITS\\GPT_SoVITS\\module\\core_vq.py","GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","GPT-SoVITS\\GPT_SoVITS\\module\\losses.py","GPT-SoVITS\\GPT_SoVITS\\module\\mel_processing.py","GPT-SoVITS\\GPT_SoVITS\\module\\models.py","GPT-SoVITS\\GPT_SoVITS\\module\\models_onnx.py","GPT-SoVITS\\GPT_SoVITS\\module\\modules.py","GPT-SoVITS\\GPT_SoVITS\\module\\mrte_model.py","GPT-SoVITS\\GPT_SoVITS\\module\\quantize.py","GPT-SoVITS\\GPT_SoVITS\\module\\transforms.py","GPT-SoVITS\\GPT_SoVITS\\onnx_export.py","GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\1-get-text.py","GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-hubert-wav32k.py","GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\2-get-sv.py","GPT-SoVITS\\GPT_SoVITS\\prepare_datasets\\3-get-semantic.py","GPT-SoVITS\\GPT_SoVITS\\pretrained_models\\.gitignore","GPT-SoVITS\\GPT_SoVITS\\process_ckpt.py","GPT-SoVITS\\GPT_SoVITS\\s1_train.py","GPT-SoVITS\\GPT_SoVITS\\s2_train.py","GPT-SoVITS\\GPT_SoVITS\\s2_train_v3.py","GPT-SoVITS\\GPT_SoVITS\\s2_train_v3_lora.py","GPT-SoVITS\\GPT_SoVITS\\sv.py","GPT-SoVITS\\GPT_SoVITS\\text\\.gitignore","GPT-SoVITS\\GPT_SoVITS\\text\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\text\\cantonese.py","GPT-SoVITS\\GPT_SoVITS\\text\\chinese.py","GPT-SoVITS\\GPT_SoVITS\\text\\chinese2.py","GPT-SoVITS\\GPT_SoVITS\\text\\cleaner.py","GPT-SoVITS\\GPT_SoVITS\\text\\en_normalization\\expend.py","GPT-SoVITS\\GPT_SoVITS\\text\\engdict-hot.rep","GPT-SoVITS\\GPT_SoVITS\\text\\english.py","GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\dataset.py","GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\g2pw.py","GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\onnx_api.py","GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\polyphonic.rep","GPT-SoVITS\\GPT_SoVITS\\text\\g2pw\\utils.py","GPT-SoVITS\\GPT_SoVITS\\text\\japanese.py","GPT-SoVITS\\GPT_SoVITS\\text\\korean.py","GPT-SoVITS\\GPT_SoVITS\\text\\LangSegmenter\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\text\\LangSegmenter\\langsegmenter.py","GPT-SoVITS\\GPT_SoVITS\\text\\namedict_cache.pickle","GPT-SoVITS\\GPT_SoVITS\\text\\opencpop-strict.txt","GPT-SoVITS\\GPT_SoVITS\\text\\symbols.py","GPT-SoVITS\\GPT_SoVITS\\text\\symbols2.py","GPT-SoVITS\\GPT_SoVITS\\text\\tone_sandhi.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\char_convert.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\chronology.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\constants.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\num.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\phonecode.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\quantifier.py","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\README.md","GPT-SoVITS\\GPT_SoVITS\\text\\zh_normalization\\text_normlization.py","GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\__init__.py","GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\text_segmentation_method.py","GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TextPreprocessor.py","GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TTS.py","GPT-SoVITS\\GPT_SoVITS\\utils.py","GPT-SoVITS\\install.ps1","GPT-SoVITS\\install.sh","GPT-SoVITS\\LICENSE","GPT-SoVITS\\README.md","GPT-SoVITS\\requirements.txt","GPT-SoVITS\\tools\\__init__.py","GPT-SoVITS\\tools\\AP_BWE_main\\24kto48k\\readme.txt","GPT-SoVITS\\tools\\AP_BWE_main\\datasets1\\__init__.py","GPT-SoVITS\\tools\\AP_BWE_main\\datasets1\\dataset.py","GPT-SoVITS\\tools\\AP_BWE_main\\LICENSE","GPT-SoVITS\\tools\\AP_BWE_main\\models\\__init__.py","GPT-SoVITS\\tools\\AP_BWE_main\\models\\model.py","GPT-SoVITS\\tools\\AP_BWE_main\\README.md","GPT-SoVITS\\tools\\asr\\config.py","GPT-SoVITS\\tools\\asr\\fasterwhisper_asr.py","GPT-SoVITS\\tools\\asr\\funasr_asr.py","GPT-SoVITS\\tools\\asr\\models\\.gitignore","GPT-SoVITS\\tools\\assets.py","GPT-SoVITS\\tools\\audio_sr.py","GPT-SoVITS\\tools\\cmd-denoise.py","GPT-SoVITS\\tools\\denoise-model\\.gitignore","GPT-SoVITS\\tools\\i18n\\i18n.py","GPT-SoVITS\\tools\\i18n\\locale\\en_US.json","GPT-SoVITS\\tools\\i18n\\locale\\es_ES.json","GPT-SoVITS\\tools\\i18n\\locale\\fr_FR.json","GPT-SoVITS\\tools\\i18n\\locale\\it_IT.json","GPT-SoVITS\\tools\\i18n\\locale\\ja_JP.json","GPT-SoVITS\\tools\\i18n\\locale\\ko_KR.json","GPT-SoVITS\\tools\\i18n\\locale\\pt_BR.json","GPT-SoVITS\\tools\\i18n\\locale\\ru_RU.json","GPT-SoVITS\\tools\\i18n\\locale\\tr_TR.json","GPT-SoVITS\\tools\\i18n\\locale\\zh_CN.json","GPT-SoVITS\\tools\\i18n\\locale\\zh_HK.json","GPT-SoVITS\\tools\\i18n\\locale\\zh_SG.json","GPT-SoVITS\\tools\\i18n\\locale\\zh_TW.json","GPT-SoVITS\\tools\\i18n\\scan_i18n.py","GPT-SoVITS\\tools\\my_utils.py","GPT-SoVITS\\tools\\slice_audio.py","GPT-SoVITS\\tools\\slicer2.py","GPT-SoVITS\\tools\\subfix_webui.py","GPT-SoVITS\\tools\\uvr5\\bs_roformer\\__init__.py","GPT-SoVITS\\tools\\uvr5\\bs_roformer\\attend.py","GPT-SoVITS\\tools\\uvr5\\bs_roformer\\bs_roformer.py","GPT-SoVITS\\tools\\uvr5\\bs_roformer\\mel_band_roformer.py","GPT-SoVITS\\tools\\uvr5\\bsroformer.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\dataset.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers_123812KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers_123821KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers_33966KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers_537227KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers_537238KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\layers_new.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\model_param_init.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr16000_hl512.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr32000_hl512.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr33075_hl384.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr44100_hl1024.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr44100_hl256.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr44100_hl512.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\1band_sr44100_hl512_cut.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\2band_32000.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\2band_44100_lofi.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\2band_48000.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\3band_44100.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\3band_44100_mid.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\3band_44100_msb2.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_44100.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_44100_mid.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_44100_msb.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_44100_msb2.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_44100_reverse.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_44100_sw.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_v2.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_v2_sn.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\4band_v3.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\modelparams\\ensemble.json","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_123812KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_123821KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_33966KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_537227KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_537238KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_61968KB.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\nets_new.py","GPT-SoVITS\\tools\\uvr5\\lib\\lib_v5\\spec_utils.py","GPT-SoVITS\\tools\\uvr5\\lib\\name_params.json","GPT-SoVITS\\tools\\uvr5\\lib\\utils.py","GPT-SoVITS\\tools\\uvr5\\mdxnet.py","GPT-SoVITS\\tools\\uvr5\\uvr5_weights\\.gitignore","GPT-SoVITS\\tools\\uvr5\\vr.py","GPT-SoVITS\\tools\\uvr5\\webui.py","GPT-SoVITS\\webui.py"]},"time":{"rules":[],"rules_parse_time":21.81249737739563,"profiling_times":{"config_time":9.471393585205078,"core_time":493.59694385528564,"ignores_time":0.009768962860107422,"total_time":503.07976055145264},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":454.7289535999298,"per_file_time":{"mean":0.5426359828161451,"std_dev":3.2963370651944675},"very_slow_stats":{"time_ratio":0.8365898320896028,"count_ratio":0.11575178997613365},"very_slow_files":[{"fpath":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\train.py","ftime":7.350241661071777},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\text\\tone_sandhi.py","ftime":7.997399806976318},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script_v3v4.py","ftime":8.47360110282898},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\module\\data_utils.py","ftime":8.92649507522583},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\export_torch_script.py","ftime":9.016321182250977},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\module\\models.py","ftime":10.564702987670898},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\inference_webui.py","ftime":13.023926973342896},{"fpath":"GPT-SoVITS\\api.py","ftime":14.149208068847656},{"fpath":"GPT-SoVITS\\webui.py","ftime":22.539373874664307},{"fpath":"GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TTS.py","ftime":26.897786378860474}]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\train.py:56:4 [rules: 3, first: python.django.net.tainted-django-http-request-aiohttp.tainted-django-http-request-aiohttp]","location":{"path":"GPT-SoVITS\\GPT_SoVITS\\BigVGAN\\train.py","start":{"line":56,"col":5,"offset":1407},"end":{"line":56,"col":10,"offset":1412}}},{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TTS.py:984:8 [rules: 10, first: python.boto3.security.hardcoded-token.hardcoded-token]","location":{"path":"GPT-SoVITS\\GPT_SoVITS\\TTS_infer_pack\\TTS.py","start":{"line":984,"col":9,"offset":41197},"end":{"line":984,"col":12,"offset":41200}}}],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9892279099980152,"rules_selected_ratio":0.046667027540703586,"rules_matched_ratio":0.046667027540703586},"targets":[],"total_bytes":0,"max_memory_bytes":9858069952},"engine_requested":"OSS","interfile_languages_used":[],"skipped_rules":[]}