{"version":"1.139.0","results":[{"check_id":"python.lang.file.avoid-mktemp.avoid-mktemp","path":"yolov10\\app.py","start":{"line":14,"col":22,"offset":453},"end":{"line":14,"col":53,"offset":484},"extra":{"metavars":{},"message":"The function `mktemp` is deprecated. When using this function, it is possible for an attacker to modify the created file before the filename is returned. Use `NamedTemporaryFile()` instead and pass it the `delete=False` parameter.","metadata":{"likelihood":"LOW","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-377: Insecure Temporary File"],"display-name":"Insecure Temporary File","owasp":["A01:2021 - Broken Access Control"],"references":["https://docs.python.org/3/library/tempfile.html#tempfile.mktemp","https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"technology":["python","tempfile"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/python.lang.file.avoid-mktemp.avoid-mktemp","shortlink":"https://sg.run/4b9l7","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116544,"rule_id":"GdUvlzp","rv_id":947990,"url":"https://semgrep.dev/playground/r/A8TJW8N/python.lang.file.avoid-mktemp.avoid-mktemp","version_id":"A8TJW8N"}}},"severity":"INFO","fingerprint":"3c312aa00a34d7db1013c5d83d392c91cdf95ecfc0e88dee36247d59e58699c6f9d7fc569e8032edf73464f14dbf124abb648819b3911cd5b53cb9db00b646de_0","lines":"        video_path = tempfile.mktemp(suffix=\".webm\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.file.avoid-mktemp.avoid-mktemp","path":"yolov10\\app.py","start":{"line":24,"col":29,"offset":849},"end":{"line":24,"col":60,"offset":880},"extra":{"metavars":{},"message":"The function `mktemp` is deprecated. When using this function, it is possible for an attacker to modify the created file before the filename is returned. Use `NamedTemporaryFile()` instead and pass it the `delete=False` parameter.","metadata":{"likelihood":"LOW","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-377: Insecure Temporary File"],"display-name":"Insecure Temporary File","owasp":["A01:2021 - Broken Access Control"],"references":["https://docs.python.org/3/library/tempfile.html#tempfile.mktemp","https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"technology":["python","tempfile"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/python.lang.file.avoid-mktemp.avoid-mktemp","shortlink":"https://sg.run/4b9l7","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116544,"rule_id":"GdUvlzp","rv_id":947990,"url":"https://semgrep.dev/playground/r/A8TJW8N/python.lang.file.avoid-mktemp.avoid-mktemp","version_id":"A8TJW8N"}}},"severity":"INFO","fingerprint":"3c312aa00a34d7db1013c5d83d392c91cdf95ecfc0e88dee36247d59e58699c6f9d7fc569e8032edf73464f14dbf124abb648819b3911cd5b53cb9db00b646de_1","lines":"        output_video_path = tempfile.mktemp(suffix=\".webm\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\docs\\build_docs.py","start":{"line":60,"col":83,"offset":2752},"end":{"line":60,"col":87,"offset":2756},"extra":{"metavars":{"$FUNC":{"start":{"line":60,"col":16,"offset":2685},"end":{"line":60,"col":19,"offset":2688},"abstract_content":"run"},"$TRUE":{"start":{"line":60,"col":83,"offset":2752},"end":{"line":60,"col":87,"offset":2756},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"2e16307757e8964cf039097edf1eedb2a29695c7f0fde5f885d06e469a3556501c2d1d9e58192147e2c1f28f792949885e85c8c11379c603d0172bdb6e0cb2f3_0","lines":"    subprocess.run(f\"mkdocs build -f {DOCS.parent}/mkdocs.yml\", check=True, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration","path":"yolov10\\docs\\overrides\\javascript\\extra.js","start":{"line":65,"col":5,"offset":3095},"end":{"line":68,"col":12,"offset":3252},"extra":{"metavars":{"$OBJECT":{"start":{"line":65,"col":5,"offset":3095},"end":{"line":65,"col":18,"offset":3108},"abstract_content":"window.parent"}},"message":"The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.","metadata":{"owasp":["A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-345: Insufficient Verification of Data Authenticity"],"category":"security","technology":["browser"],"subcategory":["audit"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration","shortlink":"https://sg.run/PJ4p","semgrep.dev":{"rule":{"origin":"community","r_id":9245,"rule_id":"KxUbq4","rv_id":1024160,"url":"https://semgrep.dev/playground/r/1QTYO8E/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration","version_id":"1QTYO8E"}}},"severity":"WARNING","fingerprint":"463ae72162a98d98f7357a922cd21966d223069e0cd55f7c9acb295ee6c5bc058d9cb65fa8f2f90ccc028dccaff3b6d7963d5f88e8e0de896f7afa78b6d7d6d8_0","lines":"    window.parent.postMessage({\n        type: 'navigation',\n        hash: window.location.pathname + window.location.search + window.location.hash\n    }, '*');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\cfg\\__init__.py","start":{"line":438,"col":20,"offset":14685},"end":{"line":438,"col":27,"offset":14692},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"5420387b45fe1ab5d627c894de2d6e6c00039d8e308049b566e677cc07ab2f445e1ce3058193546d3e5ffef9a0a2e349a22c97e2072cbb328fb39aa01c789477_0","lines":"            return eval(v)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-numpy.pickles-in-numpy","path":"yolov10\\ultralytics\\data\\dataset.py","start":{"line":350,"col":13,"offset":16793},"end":{"line":350,"col":50,"offset":16830},"extra":{"metavars":{"$VALUE":{"start":{"line":350,"col":45,"offset":16825},"end":{"line":350,"col":49,"offset":16829},"abstract_content":"True"}},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider using fickling or switching to a safer serialization method","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["numpy"],"description":"Potential arbitrary code execution from `NumPy` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-numpy.pickles-in-numpy","shortlink":"https://sg.run/ryKe","semgrep.dev":{"rule":{"origin":"community","r_id":17169,"rule_id":"lBUWjy","rv_id":833301,"url":"https://semgrep.dev/playground/r/WrTdpJ9/trailofbits.python.pickles-in-numpy.pickles-in-numpy","version_id":"WrTdpJ9"}}},"severity":"ERROR","fingerprint":"d0d81d6d3d09ebc0c9649dbd27f873815a115300d91b8ccb3fce05b62837d8a126303ca76ac3e48d4bc27f77f49acabab371c86e87c477a827ae37753fcff821_0","lines":"    cache = np.load(str(path), allow_pickle=True).item()  # load dict","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\data\\loaders.py","start":{"line":89,"col":17,"offset":3585},"end":{"line":89,"col":24,"offset":3592},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"8765054ab5a78136642499b5a17619048a3b921dda6163c7ce9d17cdbe5e8850bbdccb5a0d47236099bf7cee1de650f8f76938f0cb498d05358001fa0635655e_0","lines":"            s = eval(s) if s.isnumeric() else s  # i.e. s = '0' local webcam","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.exec-detected.exec-detected","path":"yolov10\\ultralytics\\data\\utils.py","start":{"line":336,"col":17,"offset":15216},"end":{"line":336,"col":40,"offset":15239},"extra":{"metavars":{},"message":"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.exec-detected.exec-detected","shortlink":"https://sg.run/ndRX","semgrep.dev":{"rule":{"origin":"community","r_id":9636,"rule_id":"QrUzKv","rv_id":946342,"url":"https://semgrep.dev/playground/r/O9TX37W/python.lang.security.audit.exec-detected.exec-detected","version_id":"O9TX37W"}}},"severity":"WARNING","fingerprint":"3e2bdfd5487d0e53989a68304968e4fda1df73742da745b21371b0f4245cc14972627ce1062c00ede322c46a4c025c59499af40f49c731a134021ef494b9e3c7_0","lines":"                exec(s, {\"yaml\": data})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\data\\utils.py","start":{"line":378,"col":83,"offset":17408},"end":{"line":378,"col":87,"offset":17412},"extra":{"metavars":{"$FUNC":{"start":{"line":378,"col":24,"offset":17349},"end":{"line":378,"col":27,"offset":17352},"abstract_content":"run"},"$TRUE":{"start":{"line":378,"col":83,"offset":17408},"end":{"line":378,"col":87,"offset":17412},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"9065f9917a0200cd80dbd3fddc8f572e2255d0de979260003fa34e316464191a4e53d999a7d923e26168c7f84e240eca6493731cadeb12b8ac896379bb42b802_0","lines":"            subprocess.run(f\"bash {ROOT / 'data/scripts/get_imagenet.sh'}\", shell=True, check=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\engine\\exporter.py","start":{"line":877,"col":77,"offset":42140},"end":{"line":877,"col":81,"offset":42144},"extra":{"metavars":{"$FUNC":{"start":{"line":877,"col":28,"offset":42091},"end":{"line":877,"col":31,"offset":42094},"abstract_content":"run"},"$TRUE":{"start":{"line":877,"col":77,"offset":42140},"end":{"line":877,"col":81,"offset":42144},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"0db66646e70cda4483eff7bd29e223c789683175ea893f09bd7c74f5be038982e0f9da5051fff7fe558fc1287c58dccf82af5edf571aae1f0e2354fb91604504_0","lines":"                subprocess.run(c if sudo else c.replace(\"sudo \", \"\"), shell=True, check=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\engine\\exporter.py","start":{"line":878,"col":41,"offset":42199},"end":{"line":878,"col":45,"offset":42203},"extra":{"metavars":{"$FUNC":{"start":{"line":878,"col":26,"offset":42184},"end":{"line":878,"col":29,"offset":42187},"abstract_content":"run"},"$TRUE":{"start":{"line":878,"col":41,"offset":42199},"end":{"line":878,"col":45,"offset":42203},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"0db66646e70cda4483eff7bd29e223c789683175ea893f09bd7c74f5be038982e0f9da5051fff7fe558fc1287c58dccf82af5edf571aae1f0e2354fb91604504_1","lines":"        ver = subprocess.run(cmd, shell=True, capture_output=True, check=True).stdout.decode().split()[-1]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\engine\\exporter.py","start":{"line":885,"col":35,"offset":42619},"end":{"line":885,"col":39,"offset":42623},"extra":{"metavars":{"$FUNC":{"start":{"line":885,"col":20,"offset":42604},"end":{"line":885,"col":23,"offset":42607},"abstract_content":"run"},"$TRUE":{"start":{"line":885,"col":35,"offset":42619},"end":{"line":885,"col":39,"offset":42623},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"0db66646e70cda4483eff7bd29e223c789683175ea893f09bd7c74f5be038982e0f9da5051fff7fe558fc1287c58dccf82af5edf571aae1f0e2354fb91604504_2","lines":"        subprocess.run(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\engine\\exporter.py","start":{"line":916,"col":39,"offset":44118},"end":{"line":916,"col":43,"offset":44122},"extra":{"metavars":{"$FUNC":{"start":{"line":916,"col":24,"offset":44103},"end":{"line":916,"col":27,"offset":44106},"abstract_content":"run"},"$TRUE":{"start":{"line":916,"col":39,"offset":44118},"end":{"line":916,"col":43,"offset":44122},"abstract_content":"True"}},"message":"Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"0db66646e70cda4483eff7bd29e223c789683175ea893f09bd7c74f5be038982e0f9da5051fff7fe558fc1287c58dccf82af5edf571aae1f0e2354fb91604504_3","lines":"            subprocess.run(cmd, shell=True)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\engine\\model.py","start":{"line":323,"col":9,"offset":15733},"end":{"line":323,"col":74,"offset":15798},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"98c8ef81883d2c8af7067882dc8527f433211df1af717515d7c909f19ec331ec3ad0870be4ddebbf23148990201b99ec34cfc9176f246511780faaad1794c1df_0","lines":"        torch.save({**self.ckpt, **updates}, filename, use_dill=use_dill)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\engine\\trainer.py","start":{"line":502,"col":9,"offset":23045},"end":{"line":502,"col":36,"offset":23072},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"fbbc3ad977a78bed27c78f436dd726c3f8cbb8a764664ca714beaca886c6eaaccce9c15bf158ce7d30a8e5f0d260e7b4b746518772cba00f3d4a4633c7bb128a_0","lines":"        torch.save(ckpt, self.last)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\engine\\trainer.py","start":{"line":504,"col":13,"offset":23133},"end":{"line":504,"col":40,"offset":23160},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"fbbc3ad977a78bed27c78f436dd726c3f8cbb8a764664ca714beaca886c6eaaccce9c15bf158ce7d30a8e5f0d260e7b4b746518772cba00f3d4a4633c7bb128a_1","lines":"            torch.save(ckpt, self.best)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\engine\\trainer.py","start":{"line":506,"col":13,"offset":23272},"end":{"line":506,"col":66,"offset":23325},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"fbbc3ad977a78bed27c78f436dd726c3f8cbb8a764664ca714beaca886c6eaaccce9c15bf158ce7d30a8e5f0d260e7b4b746518772cba00f3d4a4633c7bb128a_2","lines":"            torch.save(ckpt, self.wdir / f\"epoch{self.epoch}.pt\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\engine\\tuner.py","start":{"line":197,"col":27,"offset":9630},"end":{"line":197,"col":48,"offset":9651},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"ea79b6179fb3a4001646683033bcb023835b60e273ec9dec3f0e7647a2831adebb291c54e3d5318f8699b2dc25f771b85e09446605dafc42b585ef21068aa85c_0","lines":"                metrics = torch.load(ckpt_file)[\"train_metrics\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\models\\nas\\model.py","start":{"line":58,"col":26,"offset":1838},"end":{"line":58,"col":45,"offset":1857},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"a75d26ba07ccaff3f050544360d9392d8f92efea4d8f3b33429ae885c38c6e448482851f5ee1c049aa66111cacb66f86ea182d600f924797c5933e98d5bbf719_0","lines":"            self.model = torch.load(weights)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\models\\sam\\build.py","start":{"line":133,"col":26,"offset":4303},"end":{"line":133,"col":39,"offset":4316},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"89d257e86c8dcf93d519ac54b839c7eb9331919f74c8bb529b54bea13ff215a18dbe7d9857db8a6d83146b6b1d5fa1cf5d906ec424aa7d32894c06eefbfb9ebe_0","lines":"            state_dict = torch.load(f)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","path":"yolov10\\ultralytics\\nn\\autobackend.py","start":{"line":253,"col":39,"offset":11426},"end":{"line":253,"col":67,"offset":11454},"extra":{"metavars":{"$MODULE":{"start":{"line":53,"col":7,"offset":1962},"end":{"line":53,"col":18,"offset":1973},"abstract_content":"AutoBackend"},"$FN":{"start":{"line":253,"col":42,"offset":11429},"end":{"line":253,"col":47,"offset":11434},"abstract_content":"empty"}},"message":"Usage of NumPy library inside PyTorch `AutoBackend` module was found. Avoid mixing these libraries for efficiency and proper ONNX loading","metadata":{"category":"performance","subcategory":["audit"],"confidence":"MEDIUM","technology":["pytorch","numpy"],"description":"Uses of `NumPy` functions inside `PyTorch` modules","references":["https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects"],"license":"AGPL-3.0 license","source":"https://semgrep.dev/r/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","shortlink":"https://sg.run/9vxr","semgrep.dev":{"rule":{"origin":"community","r_id":17167,"rule_id":"KxU507","rv_id":833295,"url":"https://semgrep.dev/playground/r/5PTyDEK/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","version_id":"5PTyDEK"}}},"severity":"WARNING","fingerprint":"d515278bea2e2af6c5b074a7d27cf1433e9e02065d7356f580639a087c66c34dedd4abf0796246f74ed662e8e6e368ba96477c7f35907e324fd95de4914e2f8f_0","lines":"                im = torch.from_numpy(np.empty(shape, dtype=dtype)).to(device)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\nn\\autobackend.py","start":{"line":379,"col":35,"offset":17529},"end":{"line":379,"col":42,"offset":17536},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"869c90ad4b87fc6217459768cf24dff4844b19b5f7455fbe8a162692b01cfb0cefdc96b720ec533a0731daf06d9e25ad45c3d5c2963f06868aa42fb8905f853d_0","lines":"                    metadata[k] = eval(v)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","path":"yolov10\\ultralytics\\nn\\autobackend.py","start":{"line":458,"col":21,"offset":21008},"end":{"line":458,"col":75,"offset":21062},"extra":{"metavars":{"$MODULE":{"start":{"line":53,"col":7,"offset":1962},"end":{"line":53,"col":18,"offset":1973},"abstract_content":"AutoBackend"},"$FN":{"start":{"line":458,"col":24,"offset":21011},"end":{"line":458,"col":35,"offset":21022},"abstract_content":"concatenate"}},"message":"Usage of NumPy library inside PyTorch `AutoBackend` module was found. Avoid mixing these libraries for efficiency and proper ONNX loading","metadata":{"category":"performance","subcategory":["audit"],"confidence":"MEDIUM","technology":["pytorch","numpy"],"description":"Uses of `NumPy` functions inside `PyTorch` modules","references":["https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects"],"license":"AGPL-3.0 license","source":"https://semgrep.dev/r/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","shortlink":"https://sg.run/9vxr","semgrep.dev":{"rule":{"origin":"community","r_id":17167,"rule_id":"KxU507","rv_id":833295,"url":"https://semgrep.dev/playground/r/5PTyDEK/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","version_id":"5PTyDEK"}}},"severity":"WARNING","fingerprint":"7260f7703eff4c9906f0bcef6979f5379ad753946af9fb3eaad4fdc6a650b370a586a59dd5497064941bf1d95f879a2d61f8566c3e9d4fa7b68943cf333c0bea_0","lines":"                y = np.concatenate([list(r.values())[0] for r in results])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","path":"yolov10\\ultralytics\\nn\\autobackend.py","start":{"line":511,"col":22,"offset":23930},"end":{"line":511,"col":48,"offset":23956},"extra":{"metavars":{"$MODULE":{"start":{"line":53,"col":7,"offset":1962},"end":{"line":53,"col":18,"offset":1973},"abstract_content":"AutoBackend"},"$FN":{"start":{"line":511,"col":25,"offset":23933},"end":{"line":511,"col":30,"offset":23938},"abstract_content":"array"}},"message":"Usage of NumPy library inside PyTorch `AutoBackend` module was found. Avoid mixing these libraries for efficiency and proper ONNX loading","metadata":{"category":"performance","subcategory":["audit"],"confidence":"MEDIUM","technology":["pytorch","numpy"],"description":"Uses of `NumPy` functions inside `PyTorch` modules","references":["https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects"],"license":"AGPL-3.0 license","source":"https://semgrep.dev/r/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","shortlink":"https://sg.run/9vxr","semgrep.dev":{"rule":{"origin":"community","r_id":17167,"rule_id":"KxU507","rv_id":833295,"url":"https://semgrep.dev/playground/r/5PTyDEK/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","version_id":"5PTyDEK"}}},"severity":"WARNING","fingerprint":"4b0a176fc2000836d30270049647049360a0f7f2205d7134579d5214797b6c86089fda21b4f6c5da47703000c224ec873ff3e42973081cbdd51195a74a083c58_0","lines":"                y = [np.array(ex.extract(x)[1])[None] for x in self.net.output_names()]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","path":"yolov10\\ultralytics\\nn\\autobackend.py","start":{"line":555,"col":24,"offset":26515},"end":{"line":555,"col":56,"offset":26547},"extra":{"metavars":{"$MODULE":{"start":{"line":53,"col":7,"offset":1962},"end":{"line":53,"col":18,"offset":1973},"abstract_content":"AutoBackend"},"$FN":{"start":{"line":555,"col":27,"offset":26518},"end":{"line":555,"col":36,"offset":26527},"abstract_content":"transpose"}},"message":"Usage of NumPy library inside PyTorch `AutoBackend` module was found. Avoid mixing these libraries for efficiency and proper ONNX loading","metadata":{"category":"performance","subcategory":["audit"],"confidence":"MEDIUM","technology":["pytorch","numpy"],"description":"Uses of `NumPy` functions inside `PyTorch` modules","references":["https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects"],"license":"AGPL-3.0 license","source":"https://semgrep.dev/r/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","shortlink":"https://sg.run/9vxr","semgrep.dev":{"rule":{"origin":"community","r_id":17167,"rule_id":"KxU507","rv_id":833295,"url":"https://semgrep.dev/playground/r/5PTyDEK/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","version_id":"5PTyDEK"}}},"severity":"WARNING","fingerprint":"56459fd661eb78bb953557b1bb015ebc11ebaf11d001dea825e81149ecfa5b1be65caba357f613776f0d64e5713b522183bd2a528c021b3c09bd50a62d40bd50_0","lines":"                y[1] = np.transpose(y[1], (0, 3, 1, 2))  # should be y = (1, 116, 8400), (1, 32, 160, 160)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","path":"yolov10\\ultralytics\\nn\\modules\\conv.py","start":{"line":235,"col":32,"offset":9012},"end":{"line":235,"col":86,"offset":9066},"extra":{"metavars":{"$MODULE":{"start":{"line":175,"col":7,"offset":6418},"end":{"line":175,"col":14,"offset":6425},"abstract_content":"RepConv"},"$FN":{"start":{"line":235,"col":35,"offset":9015},"end":{"line":235,"col":40,"offset":9020},"abstract_content":"zeros"}},"message":"Usage of NumPy library inside PyTorch `RepConv` module was found. Avoid mixing these libraries for efficiency and proper ONNX loading","metadata":{"category":"performance","subcategory":["audit"],"confidence":"MEDIUM","technology":["pytorch","numpy"],"description":"Uses of `NumPy` functions inside `PyTorch` modules","references":["https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects"],"license":"AGPL-3.0 license","source":"https://semgrep.dev/r/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","shortlink":"https://sg.run/9vxr","semgrep.dev":{"rule":{"origin":"community","r_id":17167,"rule_id":"KxU507","rv_id":833295,"url":"https://semgrep.dev/playground/r/5PTyDEK/trailofbits.python.numpy-in-pytorch-modules.numpy-in-pytorch-modules","version_id":"5PTyDEK"}}},"severity":"WARNING","fingerprint":"df9e2cb5bfbb8b4b7a914326f1b2f82f1e76089959e7a57f50e6c12aa0ef1a06b011fe8b9c8229def7986e74f06427c92c90ea6c38f26280851dfa7ad544c168_0","lines":"                kernel_value = np.zeros((self.c1, input_dim, 3, 3), dtype=np.float32)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":699,"col":32,"offset":29745},"end":{"line":699,"col":60,"offset":29773},"extra":{"metavars":{"$NAME":{"start":{"line":699,"col":56,"offset":29769},"end":{"line":699,"col":59,"offset":29772},"abstract_content":"new"}},"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk","semgrep.dev":{"rule":{"origin":"community","r_id":12068,"rule_id":"AbUGN5","rv_id":946372,"url":"https://semgrep.dev/playground/r/GxTP7eW/python.lang.security.audit.non-literal-import.non-literal-import","version_id":"GxTP7eW"}}},"severity":"WARNING","fingerprint":"5c05ffd1571bbacd954ce3958b4b705541a6088111d1131f8b7fdea52eeee0311a8080314e983927e57d9f19053a145fd969502476b0453045085d70bbb70765_0","lines":"            sys.modules[old] = importlib.import_module(new)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":733,"col":20,"offset":31015},"end":{"line":733,"col":56,"offset":31051},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"17829ab869a77092f32c2fbfe4dfe1bba4f08681c925f1821055830190bd5e2712f62ab6d5dcb6a56795310af0230291c0ff3549e494e5520ef3b4d68eabae98_0","lines":"            ckpt = torch.load(file, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":753,"col":16,"offset":32307},"end":{"line":753,"col":52,"offset":32343},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"17829ab869a77092f32c2fbfe4dfe1bba4f08681c925f1821055830190bd5e2712f62ab6d5dcb6a56795310af0230291c0ff3549e494e5520ef3b4d68eabae98_1","lines":"        ckpt = torch.load(file, map_location=\"cpu\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":847,"col":28,"offset":36365},"end":{"line":847,"col":37,"offset":36374},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"e1ce71cb3a2549f58ebd7fb7ba99bf20eb7508882b131ff6ae6b493432528006b39ea6a98513d9546b5c3146099469e9cd8ef88cfd8eb77e17cbe85c19bd7db6_0","lines":"        Conv.default_act = eval(act)  # redefine default activation, i.e. Conv.default_act = nn.SiLU()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.dangerous-globals-use.dangerous-globals-use","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":856,"col":57,"offset":36891},"end":{"line":856,"col":69,"offset":36903},"extra":{"metavars":{},"message":"Found non static data as an index to 'globals()'. This is extremely dangerous because it allows an attacker to execute arbitrary code on the system. Refactor your code not to use 'globals()'.","metadata":{"cwe":["CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')"],"owasp":["A03:2021 - Injection"],"references":["https://github.com/mpirnat/lets-be-bad-guys/blob/d92768fb3ade32956abd53bd6bb06e19d634a084/badguys/vulnerable/views.py#L181-L186"],"category":"security","technology":["python"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.dangerous-globals-use.dangerous-globals-use","shortlink":"https://sg.run/jNzn","semgrep.dev":{"rule":{"origin":"community","r_id":10065,"rule_id":"9AUOZP","rv_id":946387,"url":"https://semgrep.dev/playground/r/2KTYb2O/python.lang.security.dangerous-globals-use.dangerous-globals-use","version_id":"2KTYb2O"}}},"severity":"WARNING","fingerprint":"5af73c2dce0202b766da6b8053a6c4ca3b5c5d0d3632132486e30ba8fd34ce1af5c648a2cf3ff4eb3e060f9a5512674e94703940f71f0f3b8d8a05181c5a4fd7_0","lines":"        m = getattr(torch.nn, m[3:]) if \"nn.\" in m else globals()[m]  # get module","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":1026,"col":24,"offset":43247},"end":{"line":1026,"col":31,"offset":43254},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"e1ce71cb3a2549f58ebd7fb7ba99bf20eb7508882b131ff6ae6b493432528006b39ea6a98513d9546b5c3146099469e9cd8ef88cfd8eb77e17cbe85c19bd7db6_1","lines":"                return eval(x)[\"task\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":1029,"col":33,"offset":43424},"end":{"line":1029,"col":40,"offset":43431},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"e1ce71cb3a2549f58ebd7fb7ba99bf20eb7508882b131ff6ae6b493432528006b39ea6a98513d9546b5c3146099469e9cd8ef88cfd8eb77e17cbe85c19bd7db6_2","lines":"                return cfg2task(eval(x))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"yolov10\\ultralytics\\utils\\checks.py","start":{"line":146,"col":56,"offset":4394},"end":{"line":146,"col":67,"offset":4405},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"9c23c4752784920e3052ff0a6172196536b96c778b98b89cdd8c8f4e373e0c444f4221df9dc6a7c40393f6671680d4b1ecb62115f49ab569b35b65db7adaf082_0","lines":"        imgsz = [int(imgsz)] if imgsz.isnumeric() else eval(imgsz)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\utils\\checks.py","start":{"line":393,"col":97,"offset":14280},"end":{"line":393,"col":101,"offset":14284},"extra":{"metavars":{"$FUNC":{"start":{"line":393,"col":40,"offset":14223},"end":{"line":393,"col":52,"offset":14235},"abstract_content":"check_output"},"$TRUE":{"start":{"line":393,"col":97,"offset":14280},"end":{"line":393,"col":101,"offset":14284},"abstract_content":"True"}},"message":"Found 'subprocess' function 'check_output' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"a9ce248ebc2ac1260e5edc6d77a630347b4e6c0c45935f187236753de844aa607562b19308ec746b71fd042595f44662b44966ab5b9461ebe5bcf6cabe05df32_0","lines":"                LOGGER.info(subprocess.check_output(f\"pip install --no-cache {s} {cmds}\", shell=True).decode())","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"yolov10\\ultralytics\\utils\\checks.py","start":{"line":674,"col":96,"offset":26585},"end":{"line":674,"col":100,"offset":26589},"extra":{"metavars":{"$FUNC":{"start":{"line":674,"col":27,"offset":26516},"end":{"line":674,"col":39,"offset":26528},"abstract_content":"check_output"},"$TRUE":{"start":{"line":674,"col":96,"offset":26585},"end":{"line":674,"col":100,"offset":26589},"abstract_content":"True"}},"message":"Found 'subprocess' function 'check_output' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"a9ce248ebc2ac1260e5edc6d77a630347b4e6c0c45935f187236753de844aa607562b19308ec746b71fd042595f44662b44966ab5b9461ebe5bcf6cabe05df32_1","lines":"        return subprocess.check_output(f\"git -C {path} describe --tags --long --always\", shell=True).decode()[:-1]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","path":"yolov10\\ultralytics\\utils\\downloads.py","start":{"line":59,"col":18,"offset":2056},"end":{"line":59,"col":38,"offset":2076},"extra":{"metavars":{},"message":"Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.","metadata":{"cwe":["CWE-939: Improper Authorization in Handler for Custom URL Scheme"],"owasp":"A01:2017 - Injection","source-rule-url":"https://github.com/PyCQA/bandit/blob/b1411bfb43795d3ffd268bef17a839dee954c2b1/bandit/blacklists/calls.py#L163","bandit-code":"B310","asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://cwe.mitre.org/data/definitions/939.html"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","shortlink":"https://sg.run/dKZZ","semgrep.dev":{"rule":{"origin":"community","r_id":9634,"rule_id":"8GUj22","rv_id":946340,"url":"https://semgrep.dev/playground/r/w8TKJbO/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","version_id":"w8TKJbO"}}},"severity":"WARNING","fingerprint":"258c287e4dd925da4d246ee757abfd608ea5e10dffaad09521c5766886b426930c2b51b04dfd031f9499fd5d41b3d5b4e6a2b4855e9f539e6f69f9303935aefd_0","lines":"            with request.urlopen(url) as response:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","path":"yolov10\\ultralytics\\utils\\downloads.py","start":{"line":335,"col":30,"offset":14116},"end":{"line":335,"col":50,"offset":14136},"extra":{"metavars":{},"message":"Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.","metadata":{"cwe":["CWE-939: Improper Authorization in Handler for Custom URL Scheme"],"owasp":"A01:2017 - Injection","source-rule-url":"https://github.com/PyCQA/bandit/blob/b1411bfb43795d3ffd268bef17a839dee954c2b1/bandit/blacklists/calls.py#L163","bandit-code":"B310","asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://cwe.mitre.org/data/definitions/939.html"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","shortlink":"https://sg.run/dKZZ","semgrep.dev":{"rule":{"origin":"community","r_id":9634,"rule_id":"8GUj22","rv_id":946340,"url":"https://semgrep.dev/playground/r/w8TKJbO/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","version_id":"w8TKJbO"}}},"severity":"WARNING","fingerprint":"258c287e4dd925da4d246ee757abfd608ea5e10dffaad09521c5766886b426930c2b51b04dfd031f9499fd5d41b3d5b4e6a2b4855e9f539e6f69f9303935aefd_1","lines":"                        with request.urlopen(url) as response, TQDM(","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\utils\\torch_utils.py","start":{"line":486,"col":9,"offset":20289},"end":{"line":486,"col":56,"offset":20336},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"80c337b5d106072fb72272187d1cecc404c697a88058c4447cd05d884291659e5d405e9ab179f8f9506909ef8805a4ba65388bb6f604582a321b9a8b2e5747c2_0","lines":"    x = torch.load(f, map_location=torch.device(\"cpu\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","path":"yolov10\\ultralytics\\utils\\torch_utils.py","start":{"line":504,"col":5,"offset":21132},"end":{"line":504,"col":26,"offset":21153},"extra":{"metavars":{},"message":"Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX","metadata":{"category":"security","cwe":"CWE-502: Deserialization of Untrusted Data","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"HIGH","technology":["pytorch"],"description":"Potential arbitrary code execution from `PyTorch` functions reliant on pickling","references":["https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/"],"license":"AGPL-3.0 license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","shortlink":"https://sg.run/NwQy","semgrep.dev":{"rule":{"origin":"community","r_id":17171,"rule_id":"JDU6WD","rv_id":833304,"url":"https://semgrep.dev/playground/r/qkTQnJ3/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch","version_id":"qkTQnJ3"}}},"severity":"ERROR","fingerprint":"80c337b5d106072fb72272187d1cecc404c697a88058c4447cd05d884291659e5d405e9ab179f8f9506909ef8805a4ba65388bb6f604582a321b9a8b2e5747c2_1","lines":"    torch.save(x, s or f)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on yolov10\\docs\\overrides\\javascript\\extra.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"yolov10\\docs\\overrides\\javascript\\extra.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on yolov10\\docs\\overrides\\javascript\\extra.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"yolov10\\docs\\overrides\\javascript\\extra.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on yolov10\\docs\\overrides\\javascript\\extra.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"yolov10\\docs\\overrides\\javascript\\extra.js"},{"code":2,"level":"warn","type":"Timeout","rule_id":"python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token","message":"Timeout when running python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token on yolov10\\ultralytics\\engine\\exporter.py:\n ","path":"yolov10\\ultralytics\\engine\\exporter.py"},{"code":2,"level":"warn","type":"Timeout","rule_id":"python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token","message":"Timeout when running python.lang.hardcoded.headers.hardcoded-basic-token.hardcoded-basic-token on yolov10\\ultralytics\\utils\\__init__.py:\n ","path":"yolov10\\ultralytics\\utils\\__init__.py"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"yolov10\\docker\\Dockerfile","start":{"line":11,"col":5,"offset":0},"end":{"line":49,"col":28,"offset":1900}}]],"message":"Syntax error at line yolov10\\docker\\Dockerfile:11:\n `https://github.com/ultralytics/assets/releases/download/v0.0.0/Arial.Unicode.ttf \\\r\n    /root/.config/Ultralytics/\r\n\r\n# Install linux packages\r\n# g++ required to build 'tflite_support' and 'lap' packages, libusb-1.0-0 required for 'tflite_support' package\r\nRUN apt update \\\r\n    && apt install --no-install-recommends -y gcc git zip curl htop libgl1 libglib2.0-0 libpython3-dev gnupg g++ libusb-1.0-0 build-essential\r\n\r\n# Security updates\r\n# https://security.snyk.io/vuln/SNYK-UBUNTU1804-OPENSSL-3314796\r\nRUN apt upgrade --no-install-recommends -y openssl tar\r\n\r\n# Create working directory\r\nWORKDIR /usr/src/ultralytics\r\n\r\n# Copy contents\r\n# COPY . /usr/src/ultralytics  # git permission issues inside container\r\nRUN git clone https://github.com/ultralytics/ultralytics -b main /usr/src/ultralytics\r\nADD https://github.com/ultralytics/assets/releases/download/v8.1.0/yolov8n.pt /usr/src/ultralytics/\r\n\r\n# Install pip packages\r\nRUN python3 -m pip install --upgrade pip wheel\r\nRUN pip install --no-cache -e \".[export]\" albumentations comet pycocotools\r\n\r\n# Run exports to AutoInstall packages\r\n# Edge TPU export fails the first time so is run twice here\r\nRUN yolo export model=tmp/yolov8n.pt format=edgetpu imgsz=32 || yolo export model=tmp/yolov8n.pt format=edgetpu imgsz=32\r\nRUN yolo export model=tmp/yolov8n.pt format=ncnn imgsz=32\r\n# Requires <= Python 3.10, bug with paddlepaddle==2.5.0 https://github.com/PaddlePaddle/X2Paddle/issues/991\r\nRUN pip install --no-cache paddlepaddle>=2.6.0 x2paddle\r\n# Fix error: `np.bool` was a deprecated alias for the builtin `bool` segmentation error in Tests\r\nRUN pip install --no-cache numpy==1.23.5\r\n# Remove exported models\r\nRUN rm -rf tmp\r\n\r\n# Set environment variables\r\nENV OMP_NUM_THREADS=1\r\n# Avoid DDP error \"MKL_THREADING_LAYER=INTEL is incompatible with libgomp.so.1 library\" https://github.com/pytorch/pytorch/issues/37377\r\nENV MKL_THREADING_LAYER=GNU` was unexpected","path":"yolov10\\docker\\Dockerfile","spans":[{"file":"yolov10\\docker\\Dockerfile","start":{"line":11,"col":5,"offset":0},"end":{"line":49,"col":28,"offset":1900}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"yolov10\\docs\\overrides\\main.html","start":{"line":3,"col":1,"offset":0},"end":{"line":5,"col":21,"offset":49}},{"path":"yolov10\\docs\\overrides\\main.html","start":{"line":12,"col":1,"offset":0},"end":{"line":12,"col":15,"offset":14}}]],"message":"Syntax error at line yolov10\\docs\\overrides\\main.html:3:\n `{% extends \"base.html\" %}\r\n\r\n{% block announce %}` was unexpected","path":"yolov10\\docs\\overrides\\main.html","spans":[{"file":"yolov10\\docs\\overrides\\main.html","start":{"line":3,"col":1,"offset":0},"end":{"line":5,"col":21,"offset":49}},{"file":"yolov10\\docs\\overrides\\main.html","start":{"line":12,"col":1,"offset":0},"end":{"line":12,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\inference.cpp","start":{"line":36,"col":79,"offset":0},"end":{"line":36,"col":82,"offset":3}}]],"message":"Syntax error at line yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\inference.cpp:36:\n `std` was unexpected","path":"yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\inference.cpp","spans":[{"file":"yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\inference.cpp","start":{"line":36,"col":79,"offset":0},"end":{"line":36,"col":82,"offset":3}}]}],"paths":{"scanned":["yolov10\\.gitignore","yolov10\\.pre-commit-config.yaml","yolov10\\app.py","yolov10\\CONTRIBUTING.md","yolov10\\docker\\Dockerfile","yolov10\\docker\\Dockerfile-arm64","yolov10\\docker\\Dockerfile-conda","yolov10\\docker\\Dockerfile-cpu","yolov10\\docker\\Dockerfile-jetson","yolov10\\docker\\Dockerfile-python","yolov10\\docker\\Dockerfile-runner","yolov10\\docs\\build_docs.py","yolov10\\docs\\build_reference.py","yolov10\\docs\\coming_soon_template.md","yolov10\\docs\\en\\CNAME","yolov10\\docs\\en\\datasets\\classify\\caltech101.md","yolov10\\docs\\en\\datasets\\classify\\caltech256.md","yolov10\\docs\\en\\datasets\\classify\\cifar10.md","yolov10\\docs\\en\\datasets\\classify\\cifar100.md","yolov10\\docs\\en\\datasets\\classify\\fashion-mnist.md","yolov10\\docs\\en\\datasets\\classify\\imagenet.md","yolov10\\docs\\en\\datasets\\classify\\imagenet10.md","yolov10\\docs\\en\\datasets\\classify\\imagenette.md","yolov10\\docs\\en\\datasets\\classify\\imagewoof.md","yolov10\\docs\\en\\datasets\\classify\\index.md","yolov10\\docs\\en\\datasets\\classify\\mnist.md","yolov10\\docs\\en\\datasets\\detect\\african-wildlife.md","yolov10\\docs\\en\\datasets\\detect\\argoverse.md","yolov10\\docs\\en\\datasets\\detect\\brain-tumor.md","yolov10\\docs\\en\\datasets\\detect\\coco.md","yolov10\\docs\\en\\datasets\\detect\\coco8.md","yolov10\\docs\\en\\datasets\\detect\\globalwheat2020.md","yolov10\\docs\\en\\datasets\\detect\\index.md","yolov10\\docs\\en\\datasets\\detect\\objects365.md","yolov10\\docs\\en\\datasets\\detect\\open-images-v7.md","yolov10\\docs\\en\\datasets\\detect\\roboflow-100.md","yolov10\\docs\\en\\datasets\\detect\\sku-110k.md","yolov10\\docs\\en\\datasets\\detect\\visdrone.md","yolov10\\docs\\en\\datasets\\detect\\voc.md","yolov10\\docs\\en\\datasets\\detect\\xview.md","yolov10\\docs\\en\\datasets\\explorer\\api.md","yolov10\\docs\\en\\datasets\\explorer\\dashboard.md","yolov10\\docs\\en\\datasets\\explorer\\explorer.ipynb","yolov10\\docs\\en\\datasets\\explorer\\index.md","yolov10\\docs\\en\\datasets\\index.md","yolov10\\docs\\en\\datasets\\obb\\dota-v2.md","yolov10\\docs\\en\\datasets\\obb\\dota8.md","yolov10\\docs\\en\\datasets\\obb\\index.md","yolov10\\docs\\en\\datasets\\pose\\coco.md","yolov10\\docs\\en\\datasets\\pose\\coco8-pose.md","yolov10\\docs\\en\\datasets\\pose\\index.md","yolov10\\docs\\en\\datasets\\pose\\tiger-pose.md","yolov10\\docs\\en\\datasets\\segment\\carparts-seg.md","yolov10\\docs\\en\\datasets\\segment\\coco.md","yolov10\\docs\\en\\datasets\\segment\\coco8-seg.md","yolov10\\docs\\en\\datasets\\segment\\crack-seg.md","yolov10\\docs\\en\\datasets\\segment\\index.md","yolov10\\docs\\en\\datasets\\segment\\package-seg.md","yolov10\\docs\\en\\datasets\\track\\index.md","yolov10\\docs\\en\\guides\\azureml-quickstart.md","yolov10\\docs\\en\\guides\\conda-quickstart.md","yolov10\\docs\\en\\guides\\coral-edge-tpu-on-raspberry-pi.md","yolov10\\docs\\en\\guides\\distance-calculation.md","yolov10\\docs\\en\\guides\\docker-quickstart.md","yolov10\\docs\\en\\guides\\heatmaps.md","yolov10\\docs\\en\\guides\\hyperparameter-tuning.md","yolov10\\docs\\en\\guides\\index.md","yolov10\\docs\\en\\guides\\instance-segmentation-and-tracking.md","yolov10\\docs\\en\\guides\\isolating-segmentation-objects.md","yolov10\\docs\\en\\guides\\kfold-cross-validation.md","yolov10\\docs\\en\\guides\\model-deployment-options.md","yolov10\\docs\\en\\guides\\object-blurring.md","yolov10\\docs\\en\\guides\\object-counting.md","yolov10\\docs\\en\\guides\\object-cropping.md","yolov10\\docs\\en\\guides\\optimizing-openvino-latency-vs-throughput-modes.md","yolov10\\docs\\en\\guides\\raspberry-pi.md","yolov10\\docs\\en\\guides\\region-counting.md","yolov10\\docs\\en\\guides\\sahi-tiled-inference.md","yolov10\\docs\\en\\guides\\security-alarm-system.md","yolov10\\docs\\en\\guides\\speed-estimation.md","yolov10\\docs\\en\\guides\\triton-inference-server.md","yolov10\\docs\\en\\guides\\view-results-in-terminal.md","yolov10\\docs\\en\\guides\\vision-eye.md","yolov10\\docs\\en\\guides\\workouts-monitoring.md","yolov10\\docs\\en\\guides\\yolo-common-issues.md","yolov10\\docs\\en\\guides\\yolo-performance-metrics.md","yolov10\\docs\\en\\guides\\yolo-thread-safe-inference.md","yolov10\\docs\\en\\help\\CI.md","yolov10\\docs\\en\\help\\CLA.md","yolov10\\docs\\en\\help\\code_of_conduct.md","yolov10\\docs\\en\\help\\contributing.md","yolov10\\docs\\en\\help\\environmental-health-safety.md","yolov10\\docs\\en\\help\\FAQ.md","yolov10\\docs\\en\\help\\index.md","yolov10\\docs\\en\\help\\minimum_reproducible_example.md","yolov10\\docs\\en\\help\\privacy.md","yolov10\\docs\\en\\help\\security.md","yolov10\\docs\\en\\hub\\api\\index.md","yolov10\\docs\\en\\hub\\app\\android.md","yolov10\\docs\\en\\hub\\app\\index.md","yolov10\\docs\\en\\hub\\app\\ios.md","yolov10\\docs\\en\\hub\\cloud-training.md","yolov10\\docs\\en\\hub\\datasets.md","yolov10\\docs\\en\\hub\\index.md","yolov10\\docs\\en\\hub\\inference-api.md","yolov10\\docs\\en\\hub\\integrations.md","yolov10\\docs\\en\\hub\\models.md","yolov10\\docs\\en\\hub\\on-premise\\index.md","yolov10\\docs\\en\\hub\\projects.md","yolov10\\docs\\en\\hub\\quickstart.md","yolov10\\docs\\en\\index.md","yolov10\\docs\\en\\integrations\\amazon-sagemaker.md","yolov10\\docs\\en\\integrations\\clearml.md","yolov10\\docs\\en\\integrations\\comet.md","yolov10\\docs\\en\\integrations\\coreml.md","yolov10\\docs\\en\\integrations\\dvc.md","yolov10\\docs\\en\\integrations\\edge-tpu.md","yolov10\\docs\\en\\integrations\\gradio.md","yolov10\\docs\\en\\integrations\\index.md","yolov10\\docs\\en\\integrations\\mlflow.md","yolov10\\docs\\en\\integrations\\ncnn.md","yolov10\\docs\\en\\integrations\\neural-magic.md","yolov10\\docs\\en\\integrations\\onnx.md","yolov10\\docs\\en\\integrations\\openvino.md","yolov10\\docs\\en\\integrations\\paddlepaddle.md","yolov10\\docs\\en\\integrations\\ray-tune.md","yolov10\\docs\\en\\integrations\\roboflow.md","yolov10\\docs\\en\\integrations\\tensorboard.md","yolov10\\docs\\en\\integrations\\tensorrt.md","yolov10\\docs\\en\\integrations\\tf-graphdef.md","yolov10\\docs\\en\\integrations\\tf-savedmodel.md","yolov10\\docs\\en\\integrations\\tflite.md","yolov10\\docs\\en\\integrations\\torchscript.md","yolov10\\docs\\en\\integrations\\weights-biases.md","yolov10\\docs\\en\\models\\fast-sam.md","yolov10\\docs\\en\\models\\index.md","yolov10\\docs\\en\\models\\mobile-sam.md","yolov10\\docs\\en\\models\\rtdetr.md","yolov10\\docs\\en\\models\\sam.md","yolov10\\docs\\en\\models\\yolo-nas.md","yolov10\\docs\\en\\models\\yolo-world.md","yolov10\\docs\\en\\models\\yolov3.md","yolov10\\docs\\en\\models\\yolov4.md","yolov10\\docs\\en\\models\\yolov5.md","yolov10\\docs\\en\\models\\yolov6.md","yolov10\\docs\\en\\models\\yolov7.md","yolov10\\docs\\en\\models\\yolov8.md","yolov10\\docs\\en\\models\\yolov9.md","yolov10\\docs\\en\\modes\\benchmark.md","yolov10\\docs\\en\\modes\\export.md","yolov10\\docs\\en\\modes\\index.md","yolov10\\docs\\en\\modes\\predict.md","yolov10\\docs\\en\\modes\\track.md","yolov10\\docs\\en\\modes\\train.md","yolov10\\docs\\en\\modes\\val.md","yolov10\\docs\\en\\quickstart.md","yolov10\\docs\\en\\reference\\cfg\\__init__.md","yolov10\\docs\\en\\reference\\data\\annotator.md","yolov10\\docs\\en\\reference\\data\\augment.md","yolov10\\docs\\en\\reference\\data\\base.md","yolov10\\docs\\en\\reference\\data\\build.md","yolov10\\docs\\en\\reference\\data\\converter.md","yolov10\\docs\\en\\reference\\data\\dataset.md","yolov10\\docs\\en\\reference\\data\\explorer\\explorer.md","yolov10\\docs\\en\\reference\\data\\explorer\\gui\\dash.md","yolov10\\docs\\en\\reference\\data\\explorer\\utils.md","yolov10\\docs\\en\\reference\\data\\loaders.md","yolov10\\docs\\en\\reference\\data\\split_dota.md","yolov10\\docs\\en\\reference\\data\\utils.md","yolov10\\docs\\en\\reference\\engine\\exporter.md","yolov10\\docs\\en\\reference\\engine\\model.md","yolov10\\docs\\en\\reference\\engine\\predictor.md","yolov10\\docs\\en\\reference\\engine\\results.md","yolov10\\docs\\en\\reference\\engine\\trainer.md","yolov10\\docs\\en\\reference\\engine\\tuner.md","yolov10\\docs\\en\\reference\\engine\\validator.md","yolov10\\docs\\en\\reference\\hub\\__init__.md","yolov10\\docs\\en\\reference\\hub\\auth.md","yolov10\\docs\\en\\reference\\hub\\session.md","yolov10\\docs\\en\\reference\\hub\\utils.md","yolov10\\docs\\en\\reference\\models\\fastsam\\model.md","yolov10\\docs\\en\\reference\\models\\fastsam\\predict.md","yolov10\\docs\\en\\reference\\models\\fastsam\\prompt.md","yolov10\\docs\\en\\reference\\models\\fastsam\\utils.md","yolov10\\docs\\en\\reference\\models\\fastsam\\val.md","yolov10\\docs\\en\\reference\\models\\nas\\model.md","yolov10\\docs\\en\\reference\\models\\nas\\predict.md","yolov10\\docs\\en\\reference\\models\\nas\\val.md","yolov10\\docs\\en\\reference\\models\\rtdetr\\model.md","yolov10\\docs\\en\\reference\\models\\rtdetr\\predict.md","yolov10\\docs\\en\\reference\\models\\rtdetr\\train.md","yolov10\\docs\\en\\reference\\models\\rtdetr\\val.md","yolov10\\docs\\en\\reference\\models\\sam\\amg.md","yolov10\\docs\\en\\reference\\models\\sam\\build.md","yolov10\\docs\\en\\reference\\models\\sam\\model.md","yolov10\\docs\\en\\reference\\models\\sam\\modules\\decoders.md","yolov10\\docs\\en\\reference\\models\\sam\\modules\\encoders.md","yolov10\\docs\\en\\reference\\models\\sam\\modules\\sam.md","yolov10\\docs\\en\\reference\\models\\sam\\modules\\tiny_encoder.md","yolov10\\docs\\en\\reference\\models\\sam\\modules\\transformer.md","yolov10\\docs\\en\\reference\\models\\sam\\predict.md","yolov10\\docs\\en\\reference\\models\\utils\\loss.md","yolov10\\docs\\en\\reference\\models\\utils\\ops.md","yolov10\\docs\\en\\reference\\models\\yolo\\classify\\predict.md","yolov10\\docs\\en\\reference\\models\\yolo\\classify\\train.md","yolov10\\docs\\en\\reference\\models\\yolo\\classify\\val.md","yolov10\\docs\\en\\reference\\models\\yolo\\detect\\predict.md","yolov10\\docs\\en\\reference\\models\\yolo\\detect\\train.md","yolov10\\docs\\en\\reference\\models\\yolo\\detect\\val.md","yolov10\\docs\\en\\reference\\models\\yolo\\model.md","yolov10\\docs\\en\\reference\\models\\yolo\\obb\\predict.md","yolov10\\docs\\en\\reference\\models\\yolo\\obb\\train.md","yolov10\\docs\\en\\reference\\models\\yolo\\obb\\val.md","yolov10\\docs\\en\\reference\\models\\yolo\\pose\\predict.md","yolov10\\docs\\en\\reference\\models\\yolo\\pose\\train.md","yolov10\\docs\\en\\reference\\models\\yolo\\pose\\val.md","yolov10\\docs\\en\\reference\\models\\yolo\\segment\\predict.md","yolov10\\docs\\en\\reference\\models\\yolo\\segment\\train.md","yolov10\\docs\\en\\reference\\models\\yolo\\segment\\val.md","yolov10\\docs\\en\\reference\\nn\\autobackend.md","yolov10\\docs\\en\\reference\\nn\\modules\\block.md","yolov10\\docs\\en\\reference\\nn\\modules\\conv.md","yolov10\\docs\\en\\reference\\nn\\modules\\head.md","yolov10\\docs\\en\\reference\\nn\\modules\\transformer.md","yolov10\\docs\\en\\reference\\nn\\modules\\utils.md","yolov10\\docs\\en\\reference\\nn\\tasks.md","yolov10\\docs\\en\\reference\\solutions\\ai_gym.md","yolov10\\docs\\en\\reference\\solutions\\distance_calculation.md","yolov10\\docs\\en\\reference\\solutions\\heatmap.md","yolov10\\docs\\en\\reference\\solutions\\object_counter.md","yolov10\\docs\\en\\reference\\solutions\\speed_estimation.md","yolov10\\docs\\en\\reference\\trackers\\basetrack.md","yolov10\\docs\\en\\reference\\trackers\\bot_sort.md","yolov10\\docs\\en\\reference\\trackers\\byte_tracker.md","yolov10\\docs\\en\\reference\\trackers\\track.md","yolov10\\docs\\en\\reference\\trackers\\utils\\gmc.md","yolov10\\docs\\en\\reference\\trackers\\utils\\kalman_filter.md","yolov10\\docs\\en\\reference\\trackers\\utils\\matching.md","yolov10\\docs\\en\\reference\\utils\\__init__.md","yolov10\\docs\\en\\reference\\utils\\autobatch.md","yolov10\\docs\\en\\reference\\utils\\benchmarks.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\base.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\clearml.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\comet.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\dvc.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\hub.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\mlflow.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\neptune.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\raytune.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\tensorboard.md","yolov10\\docs\\en\\reference\\utils\\callbacks\\wb.md","yolov10\\docs\\en\\reference\\utils\\checks.md","yolov10\\docs\\en\\reference\\utils\\dist.md","yolov10\\docs\\en\\reference\\utils\\downloads.md","yolov10\\docs\\en\\reference\\utils\\errors.md","yolov10\\docs\\en\\reference\\utils\\files.md","yolov10\\docs\\en\\reference\\utils\\instance.md","yolov10\\docs\\en\\reference\\utils\\loss.md","yolov10\\docs\\en\\reference\\utils\\metrics.md","yolov10\\docs\\en\\reference\\utils\\ops.md","yolov10\\docs\\en\\reference\\utils\\patches.md","yolov10\\docs\\en\\reference\\utils\\plotting.md","yolov10\\docs\\en\\reference\\utils\\tal.md","yolov10\\docs\\en\\reference\\utils\\torch_utils.md","yolov10\\docs\\en\\reference\\utils\\triton.md","yolov10\\docs\\en\\reference\\utils\\tuner.md","yolov10\\docs\\en\\robots.txt","yolov10\\docs\\en\\tasks\\classify.md","yolov10\\docs\\en\\tasks\\detect.md","yolov10\\docs\\en\\tasks\\index.md","yolov10\\docs\\en\\tasks\\obb.md","yolov10\\docs\\en\\tasks\\pose.md","yolov10\\docs\\en\\tasks\\segment.md","yolov10\\docs\\en\\usage\\callbacks.md","yolov10\\docs\\en\\usage\\cfg.md","yolov10\\docs\\en\\usage\\cli.md","yolov10\\docs\\en\\usage\\engine.md","yolov10\\docs\\en\\usage\\python.md","yolov10\\docs\\en\\usage\\simple-utilities.md","yolov10\\docs\\en\\yolov5\\environments\\aws_quickstart_tutorial.md","yolov10\\docs\\en\\yolov5\\environments\\azureml_quickstart_tutorial.md","yolov10\\docs\\en\\yolov5\\environments\\docker_image_quickstart_tutorial.md","yolov10\\docs\\en\\yolov5\\environments\\google_cloud_quickstart_tutorial.md","yolov10\\docs\\en\\yolov5\\index.md","yolov10\\docs\\en\\yolov5\\quickstart_tutorial.md","yolov10\\docs\\en\\yolov5\\tutorials\\architecture_description.md","yolov10\\docs\\en\\yolov5\\tutorials\\clearml_logging_integration.md","yolov10\\docs\\en\\yolov5\\tutorials\\comet_logging_integration.md","yolov10\\docs\\en\\yolov5\\tutorials\\hyperparameter_evolution.md","yolov10\\docs\\en\\yolov5\\tutorials\\model_ensembling.md","yolov10\\docs\\en\\yolov5\\tutorials\\model_export.md","yolov10\\docs\\en\\yolov5\\tutorials\\model_pruning_and_sparsity.md","yolov10\\docs\\en\\yolov5\\tutorials\\multi_gpu_training.md","yolov10\\docs\\en\\yolov5\\tutorials\\neural_magic_pruning_quantization.md","yolov10\\docs\\en\\yolov5\\tutorials\\pytorch_hub_model_loading.md","yolov10\\docs\\en\\yolov5\\tutorials\\roboflow_datasets_integration.md","yolov10\\docs\\en\\yolov5\\tutorials\\running_on_jetson_nano.md","yolov10\\docs\\en\\yolov5\\tutorials\\test_time_augmentation.md","yolov10\\docs\\en\\yolov5\\tutorials\\tips_for_best_training_results.md","yolov10\\docs\\en\\yolov5\\tutorials\\train_custom_data.md","yolov10\\docs\\en\\yolov5\\tutorials\\transfer_learning_with_frozen_layers.md","yolov10\\docs\\mkdocs_github_authors.yaml","yolov10\\docs\\overrides\\assets\\favicon.ico","yolov10\\docs\\overrides\\javascript\\extra.js","yolov10\\docs\\overrides\\main.html","yolov10\\docs\\overrides\\partials\\comments.html","yolov10\\docs\\overrides\\partials\\source-file.html","yolov10\\docs\\overrides\\stylesheets\\style.css","yolov10\\docs\\README.md","yolov10\\examples\\heatmaps.ipynb","yolov10\\examples\\hub.ipynb","yolov10\\examples\\object_counting.ipynb","yolov10\\examples\\object_tracking.ipynb","yolov10\\examples\\README.md","yolov10\\examples\\tutorial.ipynb","yolov10\\examples\\YOLOv8-CPP-Inference\\CMakeLists.txt","yolov10\\examples\\YOLOv8-CPP-Inference\\inference.cpp","yolov10\\examples\\YOLOv8-CPP-Inference\\inference.h","yolov10\\examples\\YOLOv8-CPP-Inference\\main.cpp","yolov10\\examples\\YOLOv8-CPP-Inference\\README.md","yolov10\\examples\\YOLOv8-LibTorch-CPP-Inference\\CMakeLists.txt","yolov10\\examples\\YOLOv8-LibTorch-CPP-Inference\\main.cc","yolov10\\examples\\YOLOv8-LibTorch-CPP-Inference\\README.md","yolov10\\examples\\YOLOv8-ONNXRuntime\\main.py","yolov10\\examples\\YOLOv8-ONNXRuntime\\README.md","yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\CMakeLists.txt","yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\inference.cpp","yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\inference.h","yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\main.cpp","yolov10\\examples\\YOLOv8-ONNXRuntime-CPP\\README.md","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\Cargo.toml","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\README.md","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\src\\cli.rs","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\src\\lib.rs","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\src\\main.rs","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\src\\model.rs","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\src\\ort_backend.rs","yolov10\\examples\\YOLOv8-ONNXRuntime-Rust\\src\\yolo_result.rs","yolov10\\examples\\YOLOv8-OpenCV-int8-tflite-Python\\main.py","yolov10\\examples\\YOLOv8-OpenCV-int8-tflite-Python\\README.md","yolov10\\examples\\YOLOv8-OpenCV-ONNX-Python\\main.py","yolov10\\examples\\YOLOv8-OpenCV-ONNX-Python\\README.md","yolov10\\examples\\YOLOv8-Region-Counter\\readme.md","yolov10\\examples\\YOLOv8-Region-Counter\\yolov8_region_counter.py","yolov10\\examples\\YOLOv8-SAHI-Inference-Video\\readme.md","yolov10\\examples\\YOLOv8-SAHI-Inference-Video\\yolov8_sahi.py","yolov10\\examples\\YOLOv8-Segmentation-ONNXRuntime-Python\\main.py","yolov10\\examples\\YOLOv8-Segmentation-ONNXRuntime-Python\\README.md","yolov10\\figures\\latency.svg","yolov10\\figures\\params.svg","yolov10\\flops.py","yolov10\\LICENSE","yolov10\\logs\\yolov10b.csv","yolov10\\logs\\yolov10l.csv","yolov10\\logs\\yolov10m.csv","yolov10\\logs\\yolov10n.csv","yolov10\\logs\\yolov10s.csv","yolov10\\logs\\yolov10x.csv","yolov10\\mkdocs.yml","yolov10\\pyproject.toml","yolov10\\README.md","yolov10\\requirements.txt","yolov10\\ultralytics\\__init__.py","yolov10\\ultralytics\\assets\\bus.jpg","yolov10\\ultralytics\\assets\\zidane.jpg","yolov10\\ultralytics\\cfg\\__init__.py","yolov10\\ultralytics\\cfg\\datasets\\african-wildlife.yaml","yolov10\\ultralytics\\cfg\\datasets\\Argoverse.yaml","yolov10\\ultralytics\\cfg\\datasets\\brain-tumor.yaml","yolov10\\ultralytics\\cfg\\datasets\\carparts-seg.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco-pose.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco128-seg.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco128.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco8-pose.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco8-seg.yaml","yolov10\\ultralytics\\cfg\\datasets\\coco8.yaml","yolov10\\ultralytics\\cfg\\datasets\\crack-seg.yaml","yolov10\\ultralytics\\cfg\\datasets\\dota8.yaml","yolov10\\ultralytics\\cfg\\datasets\\DOTAv1.5.yaml","yolov10\\ultralytics\\cfg\\datasets\\DOTAv1.yaml","yolov10\\ultralytics\\cfg\\datasets\\GlobalWheat2020.yaml","yolov10\\ultralytics\\cfg\\datasets\\ImageNet.yaml","yolov10\\ultralytics\\cfg\\datasets\\Objects365.yaml","yolov10\\ultralytics\\cfg\\datasets\\open-images-v7.yaml","yolov10\\ultralytics\\cfg\\datasets\\package-seg.yaml","yolov10\\ultralytics\\cfg\\datasets\\SKU-110K.yaml","yolov10\\ultralytics\\cfg\\datasets\\tiger-pose.yaml","yolov10\\ultralytics\\cfg\\datasets\\VisDrone.yaml","yolov10\\ultralytics\\cfg\\datasets\\VOC.yaml","yolov10\\ultralytics\\cfg\\datasets\\xView.yaml","yolov10\\ultralytics\\cfg\\default.yaml","yolov10\\ultralytics\\cfg\\models\\README.md","yolov10\\ultralytics\\cfg\\models\\rt-detr\\rtdetr-l.yaml","yolov10\\ultralytics\\cfg\\models\\rt-detr\\rtdetr-resnet101.yaml","yolov10\\ultralytics\\cfg\\models\\rt-detr\\rtdetr-resnet50.yaml","yolov10\\ultralytics\\cfg\\models\\rt-detr\\rtdetr-x.yaml","yolov10\\ultralytics\\cfg\\models\\v10\\yolov10b.yaml","yolov10\\ultralytics\\cfg\\models\\v10\\yolov10l.yaml","yolov10\\ultralytics\\cfg\\models\\v10\\yolov10m.yaml","yolov10\\ultralytics\\cfg\\models\\v10\\yolov10n.yaml","yolov10\\ultralytics\\cfg\\models\\v10\\yolov10s.yaml","yolov10\\ultralytics\\cfg\\models\\v10\\yolov10x.yaml","yolov10\\ultralytics\\cfg\\models\\v3\\yolov3-spp.yaml","yolov10\\ultralytics\\cfg\\models\\v3\\yolov3-tiny.yaml","yolov10\\ultralytics\\cfg\\models\\v3\\yolov3.yaml","yolov10\\ultralytics\\cfg\\models\\v5\\yolov5-p6.yaml","yolov10\\ultralytics\\cfg\\models\\v5\\yolov5.yaml","yolov10\\ultralytics\\cfg\\models\\v6\\yolov6.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-cls-resnet101.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-cls-resnet50.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-cls.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-ghost-p2.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-ghost-p6.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-ghost.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-obb.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-p2.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-p6.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-pose-p6.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-pose.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-rtdetr.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-seg-p6.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-seg.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-world.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8-worldv2.yaml","yolov10\\ultralytics\\cfg\\models\\v8\\yolov8.yaml","yolov10\\ultralytics\\cfg\\models\\v9\\yolov9c.yaml","yolov10\\ultralytics\\cfg\\models\\v9\\yolov9e.yaml","yolov10\\ultralytics\\cfg\\trackers\\botsort.yaml","yolov10\\ultralytics\\cfg\\trackers\\bytetrack.yaml","yolov10\\ultralytics\\data\\__init__.py","yolov10\\ultralytics\\data\\annotator.py","yolov10\\ultralytics\\data\\augment.py","yolov10\\ultralytics\\data\\base.py","yolov10\\ultralytics\\data\\build.py","yolov10\\ultralytics\\data\\converter.py","yolov10\\ultralytics\\data\\dataset.py","yolov10\\ultralytics\\data\\explorer\\__init__.py","yolov10\\ultralytics\\data\\explorer\\explorer.py","yolov10\\ultralytics\\data\\explorer\\gui\\__init__.py","yolov10\\ultralytics\\data\\explorer\\gui\\dash.py","yolov10\\ultralytics\\data\\explorer\\utils.py","yolov10\\ultralytics\\data\\loaders.py","yolov10\\ultralytics\\data\\scripts\\download_weights.sh","yolov10\\ultralytics\\data\\scripts\\get_coco.sh","yolov10\\ultralytics\\data\\scripts\\get_coco128.sh","yolov10\\ultralytics\\data\\scripts\\get_imagenet.sh","yolov10\\ultralytics\\data\\split_dota.py","yolov10\\ultralytics\\data\\utils.py","yolov10\\ultralytics\\engine\\__init__.py","yolov10\\ultralytics\\engine\\exporter.py","yolov10\\ultralytics\\engine\\model.py","yolov10\\ultralytics\\engine\\predictor.py","yolov10\\ultralytics\\engine\\results.py","yolov10\\ultralytics\\engine\\trainer.py","yolov10\\ultralytics\\engine\\tuner.py","yolov10\\ultralytics\\engine\\validator.py","yolov10\\ultralytics\\hub\\__init__.py","yolov10\\ultralytics\\hub\\auth.py","yolov10\\ultralytics\\hub\\session.py","yolov10\\ultralytics\\hub\\utils.py","yolov10\\ultralytics\\models\\__init__.py","yolov10\\ultralytics\\models\\fastsam\\__init__.py","yolov10\\ultralytics\\models\\fastsam\\model.py","yolov10\\ultralytics\\models\\fastsam\\predict.py","yolov10\\ultralytics\\models\\fastsam\\prompt.py","yolov10\\ultralytics\\models\\fastsam\\utils.py","yolov10\\ultralytics\\models\\fastsam\\val.py","yolov10\\ultralytics\\models\\nas\\__init__.py","yolov10\\ultralytics\\models\\nas\\model.py","yolov10\\ultralytics\\models\\nas\\predict.py","yolov10\\ultralytics\\models\\nas\\val.py","yolov10\\ultralytics\\models\\rtdetr\\__init__.py","yolov10\\ultralytics\\models\\rtdetr\\model.py","yolov10\\ultralytics\\models\\rtdetr\\predict.py","yolov10\\ultralytics\\models\\rtdetr\\train.py","yolov10\\ultralytics\\models\\rtdetr\\val.py","yolov10\\ultralytics\\models\\sam\\__init__.py","yolov10\\ultralytics\\models\\sam\\amg.py","yolov10\\ultralytics\\models\\sam\\build.py","yolov10\\ultralytics\\models\\sam\\model.py","yolov10\\ultralytics\\models\\sam\\modules\\__init__.py","yolov10\\ultralytics\\models\\sam\\modules\\decoders.py","yolov10\\ultralytics\\models\\sam\\modules\\encoders.py","yolov10\\ultralytics\\models\\sam\\modules\\sam.py","yolov10\\ultralytics\\models\\sam\\modules\\tiny_encoder.py","yolov10\\ultralytics\\models\\sam\\modules\\transformer.py","yolov10\\ultralytics\\models\\sam\\predict.py","yolov10\\ultralytics\\models\\utils\\__init__.py","yolov10\\ultralytics\\models\\utils\\loss.py","yolov10\\ultralytics\\models\\utils\\ops.py","yolov10\\ultralytics\\models\\yolo\\__init__.py","yolov10\\ultralytics\\models\\yolo\\classify\\__init__.py","yolov10\\ultralytics\\models\\yolo\\classify\\predict.py","yolov10\\ultralytics\\models\\yolo\\classify\\train.py","yolov10\\ultralytics\\models\\yolo\\classify\\val.py","yolov10\\ultralytics\\models\\yolo\\detect\\__init__.py","yolov10\\ultralytics\\models\\yolo\\detect\\predict.py","yolov10\\ultralytics\\models\\yolo\\detect\\train.py","yolov10\\ultralytics\\models\\yolo\\detect\\val.py","yolov10\\ultralytics\\models\\yolo\\model.py","yolov10\\ultralytics\\models\\yolo\\obb\\__init__.py","yolov10\\ultralytics\\models\\yolo\\obb\\predict.py","yolov10\\ultralytics\\models\\yolo\\obb\\train.py","yolov10\\ultralytics\\models\\yolo\\obb\\val.py","yolov10\\ultralytics\\models\\yolo\\pose\\__init__.py","yolov10\\ultralytics\\models\\yolo\\pose\\predict.py","yolov10\\ultralytics\\models\\yolo\\pose\\train.py","yolov10\\ultralytics\\models\\yolo\\pose\\val.py","yolov10\\ultralytics\\models\\yolo\\segment\\__init__.py","yolov10\\ultralytics\\models\\yolo\\segment\\predict.py","yolov10\\ultralytics\\models\\yolo\\segment\\train.py","yolov10\\ultralytics\\models\\yolo\\segment\\val.py","yolov10\\ultralytics\\models\\yolov10\\__init__.py","yolov10\\ultralytics\\models\\yolov10\\card.py","yolov10\\ultralytics\\models\\yolov10\\model.py","yolov10\\ultralytics\\models\\yolov10\\predict.py","yolov10\\ultralytics\\models\\yolov10\\train.py","yolov10\\ultralytics\\models\\yolov10\\val.py","yolov10\\ultralytics\\nn\\__init__.py","yolov10\\ultralytics\\nn\\autobackend.py","yolov10\\ultralytics\\nn\\modules\\__init__.py","yolov10\\ultralytics\\nn\\modules\\block.py","yolov10\\ultralytics\\nn\\modules\\conv.py","yolov10\\ultralytics\\nn\\modules\\head.py","yolov10\\ultralytics\\nn\\modules\\transformer.py","yolov10\\ultralytics\\nn\\modules\\utils.py","yolov10\\ultralytics\\nn\\tasks.py","yolov10\\ultralytics\\solutions\\__init__.py","yolov10\\ultralytics\\solutions\\ai_gym.py","yolov10\\ultralytics\\solutions\\distance_calculation.py","yolov10\\ultralytics\\solutions\\heatmap.py","yolov10\\ultralytics\\solutions\\object_counter.py","yolov10\\ultralytics\\solutions\\speed_estimation.py","yolov10\\ultralytics\\trackers\\__init__.py","yolov10\\ultralytics\\trackers\\basetrack.py","yolov10\\ultralytics\\trackers\\bot_sort.py","yolov10\\ultralytics\\trackers\\byte_tracker.py","yolov10\\ultralytics\\trackers\\README.md","yolov10\\ultralytics\\trackers\\track.py","yolov10\\ultralytics\\trackers\\utils\\__init__.py","yolov10\\ultralytics\\trackers\\utils\\gmc.py","yolov10\\ultralytics\\trackers\\utils\\kalman_filter.py","yolov10\\ultralytics\\trackers\\utils\\matching.py","yolov10\\ultralytics\\utils\\__init__.py","yolov10\\ultralytics\\utils\\autobatch.py","yolov10\\ultralytics\\utils\\benchmarks.py","yolov10\\ultralytics\\utils\\callbacks\\__init__.py","yolov10\\ultralytics\\utils\\callbacks\\base.py","yolov10\\ultralytics\\utils\\callbacks\\clearml.py","yolov10\\ultralytics\\utils\\callbacks\\comet.py","yolov10\\ultralytics\\utils\\callbacks\\dvc.py","yolov10\\ultralytics\\utils\\callbacks\\hub.py","yolov10\\ultralytics\\utils\\callbacks\\mlflow.py","yolov10\\ultralytics\\utils\\callbacks\\neptune.py","yolov10\\ultralytics\\utils\\callbacks\\raytune.py","yolov10\\ultralytics\\utils\\callbacks\\tensorboard.py","yolov10\\ultralytics\\utils\\callbacks\\wb.py","yolov10\\ultralytics\\utils\\checks.py","yolov10\\ultralytics\\utils\\dist.py","yolov10\\ultralytics\\utils\\downloads.py","yolov10\\ultralytics\\utils\\errors.py","yolov10\\ultralytics\\utils\\files.py","yolov10\\ultralytics\\utils\\instance.py","yolov10\\ultralytics\\utils\\loss.py","yolov10\\ultralytics\\utils\\metrics.py","yolov10\\ultralytics\\utils\\ops.py","yolov10\\ultralytics\\utils\\patches.py","yolov10\\ultralytics\\utils\\plotting.py","yolov10\\ultralytics\\utils\\tal.py","yolov10\\ultralytics\\utils\\torch_utils.py","yolov10\\ultralytics\\utils\\triton.py","yolov10\\ultralytics\\utils\\tuner.py"]},"time":{"rules":[],"rules_parse_time":19.96434712409973,"profiling_times":{"config_time":8.594842910766602,"core_time":549.2523722648621,"ignores_time":0.01755547523498535,"total_time":557.8677704334259},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":491.46396112442017,"per_file_time":{"mean":0.35306319046294493,"std_dev":5.216119988192627},"very_slow_stats":{"time_ratio":0.8114248095069778,"count_ratio":0.04525862068965517},"very_slow_files":[{"fpath":"yolov10\\ultralytics\\utils\\__init__.py","ftime":10.240667819976807},{"fpath":"yolov10\\ultralytics\\utils\\ops.py","ftime":10.311914443969727},{"fpath":"yolov10\\ultralytics\\utils\\plotting.py","ftime":11.89837121963501},{"fpath":"yolov10\\ultralytics\\engine\\trainer.py","ftime":12.488491773605347},{"fpath":"yolov10\\ultralytics\\utils\\checks.py","ftime":14.842618465423584},{"fpath":"yolov10\\ultralytics\\nn\\modules\\block.py","ftime":16.6201810836792},{"fpath":"yolov10\\ultralytics\\engine\\exporter.py","ftime":19.19187092781067},{"fpath":"yolov10\\ultralytics\\nn\\autobackend.py","ftime":20.312530755996704},{"fpath":"yolov10\\ultralytics\\data\\utils.py","ftime":21.69257116317749},{"fpath":"yolov10\\ultralytics\\nn\\tasks.py","ftime":63.64281606674194}]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at yolov10\\ultralytics\\nn\\tasks.py:114:8 [rules: 85, first: python.tars.sql_django_db_connection.sql.sqlite_utils.sql-django-db-connection-sqlite_utils-sqli.sql-django-db-connection-sqlite_utils-sqli]","location":{"path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":114,"col":9,"offset":3016},"end":{"line":114,"col":22,"offset":3029}}},{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at yolov10\\ultralytics\\nn\\tasks.py:538:8 [rules: 85, first: python.tars.sql_django_db_connection.sql.sqlite_utils.sql-django-db-connection-sqlite_utils-sqli.sql-django-db-connection-sqlite_utils-sqli]","location":{"path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":538,"col":9,"offset":22337},"end":{"line":538,"col":16,"offset":22344}}},{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at yolov10\\ultralytics\\nn\\tasks.py:602:8 [rules: 85, first: python.tars.sql_django_db_connection.sql.sqlite_utils.sql-django-db-connection-sqlite_utils-sqli.sql-django-db-connection-sqlite_utils-sqli]","location":{"path":"yolov10\\ultralytics\\nn\\tasks.py","start":{"line":602,"col":9,"offset":25552},"end":{"line":602,"col":16,"offset":25559}}}],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9805812701829925,"rules_selected_ratio":0.062426572351222516,"rules_matched_ratio":0.062426572351222516},"targets":[],"total_bytes":0,"max_memory_bytes":8651584064},"engine_requested":"OSS","interfile_languages_used":[],"skipped_rules":[]}